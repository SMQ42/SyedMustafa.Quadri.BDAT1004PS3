{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "219fc91c",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "436e9d55",
   "metadata": {},
   "source": [
    "# Question 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 73,
   "id": "e5e94053",
   "metadata": {},
   "outputs": [],
   "source": [
    "#importing the libraries, to avoid repition we are importing here \n",
    "import pandas as pd\n",
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "288e6480",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>user_id</th>\n",
       "      <th>age</th>\n",
       "      <th>gender</th>\n",
       "      <th>occupation</th>\n",
       "      <th>zip_code</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>24</td>\n",
       "      <td>M</td>\n",
       "      <td>technician</td>\n",
       "      <td>85711</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>53</td>\n",
       "      <td>F</td>\n",
       "      <td>other</td>\n",
       "      <td>94043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>23</td>\n",
       "      <td>M</td>\n",
       "      <td>writer</td>\n",
       "      <td>32067</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>24</td>\n",
       "      <td>M</td>\n",
       "      <td>technician</td>\n",
       "      <td>43537</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>33</td>\n",
       "      <td>F</td>\n",
       "      <td>other</td>\n",
       "      <td>15213</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>938</th>\n",
       "      <td>939</td>\n",
       "      <td>26</td>\n",
       "      <td>F</td>\n",
       "      <td>student</td>\n",
       "      <td>33319</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>939</th>\n",
       "      <td>940</td>\n",
       "      <td>32</td>\n",
       "      <td>M</td>\n",
       "      <td>administrator</td>\n",
       "      <td>02215</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>940</th>\n",
       "      <td>941</td>\n",
       "      <td>20</td>\n",
       "      <td>M</td>\n",
       "      <td>student</td>\n",
       "      <td>97229</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>941</th>\n",
       "      <td>942</td>\n",
       "      <td>48</td>\n",
       "      <td>F</td>\n",
       "      <td>librarian</td>\n",
       "      <td>78209</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>942</th>\n",
       "      <td>943</td>\n",
       "      <td>22</td>\n",
       "      <td>M</td>\n",
       "      <td>student</td>\n",
       "      <td>77841</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>943 rows Ã— 5 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     user_id  age gender     occupation zip_code\n",
       "0          1   24      M     technician    85711\n",
       "1          2   53      F          other    94043\n",
       "2          3   23      M         writer    32067\n",
       "3          4   24      M     technician    43537\n",
       "4          5   33      F          other    15213\n",
       "..       ...  ...    ...            ...      ...\n",
       "938      939   26      F        student    33319\n",
       "939      940   32      M  administrator    02215\n",
       "940      941   20      M        student    97229\n",
       "941      942   48      F      librarian    78209\n",
       "942      943   22      M        student    77841\n",
       "\n",
       "[943 rows x 5 columns]"
      ]
     },
     "execution_count": 2,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#reading the dataset from address\n",
    "users = pd.read_csv('https://raw.githubusercontent.com/justmarkham/DAT8/master/data/u.user', sep = '|')\n",
    "users"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "13266c81",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "occupation\n",
       "administrator    38.746835\n",
       "artist           31.392857\n",
       "doctor           43.571429\n",
       "educator         42.010526\n",
       "engineer         36.388060\n",
       "entertainment    29.222222\n",
       "executive        38.718750\n",
       "healthcare       41.562500\n",
       "homemaker        32.571429\n",
       "lawyer           36.750000\n",
       "librarian        40.000000\n",
       "marketing        37.615385\n",
       "none             26.555556\n",
       "other            34.523810\n",
       "programmer       33.121212\n",
       "retired          63.071429\n",
       "salesman         35.666667\n",
       "scientist        35.548387\n",
       "student          22.081633\n",
       "technician       33.148148\n",
       "writer           36.311111\n",
       "Name: age, dtype: float64"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the mean age by occupation\n",
    "users.groupby('occupation').age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "5705bfa3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0       True\n",
       "1      False\n",
       "2       True\n",
       "3       True\n",
       "4      False\n",
       "       ...  \n",
       "938    False\n",
       "939     True\n",
       "940     True\n",
       "941    False\n",
       "942     True\n",
       "Name: ocmale, Length: 943, dtype: bool"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#creating a new coloum with lambda to geet male occupation\n",
    "users['ocmale'] = users.gender.apply(lambda x: True if x == 'M' else False)\n",
    "users.ocmale\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "65a85275",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "occupation\n",
       "doctor           1.000000\n",
       "engineer         0.970149\n",
       "technician       0.962963\n",
       "retired          0.928571\n",
       "programmer       0.909091\n",
       "executive        0.906250\n",
       "scientist        0.903226\n",
       "entertainment    0.888889\n",
       "lawyer           0.833333\n",
       "salesman         0.750000\n",
       "educator         0.726316\n",
       "student          0.693878\n",
       "other            0.657143\n",
       "marketing        0.615385\n",
       "writer           0.577778\n",
       "none             0.555556\n",
       "administrator    0.544304\n",
       "artist           0.535714\n",
       "librarian        0.431373\n",
       "healthcare       0.312500\n",
       "homemaker        0.142857\n",
       "dtype: float64"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#male ratio per occuptation\n",
    "q1=(users.groupby('occupation').ocmale.sum() / users.groupby('occupation').gender.count()).sort_values(ascending = False)\n",
    "q1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "398d855e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>occupation</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>administrator</th>\n",
       "      <td>21</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>artist</th>\n",
       "      <td>19</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>doctor</th>\n",
       "      <td>28</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>educator</th>\n",
       "      <td>23</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>engineer</th>\n",
       "      <td>22</td>\n",
       "      <td>70</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>entertainment</th>\n",
       "      <td>15</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>executive</th>\n",
       "      <td>22</td>\n",
       "      <td>69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>healthcare</th>\n",
       "      <td>22</td>\n",
       "      <td>62</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>homemaker</th>\n",
       "      <td>20</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>lawyer</th>\n",
       "      <td>21</td>\n",
       "      <td>53</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>librarian</th>\n",
       "      <td>23</td>\n",
       "      <td>69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>marketing</th>\n",
       "      <td>24</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>none</th>\n",
       "      <td>11</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>other</th>\n",
       "      <td>13</td>\n",
       "      <td>64</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>programmer</th>\n",
       "      <td>20</td>\n",
       "      <td>63</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>retired</th>\n",
       "      <td>51</td>\n",
       "      <td>73</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>salesman</th>\n",
       "      <td>18</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>scientist</th>\n",
       "      <td>23</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>student</th>\n",
       "      <td>7</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>technician</th>\n",
       "      <td>21</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>writer</th>\n",
       "      <td>18</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               min  max\n",
       "occupation             \n",
       "administrator   21   70\n",
       "artist          19   48\n",
       "doctor          28   64\n",
       "educator        23   63\n",
       "engineer        22   70\n",
       "entertainment   15   50\n",
       "executive       22   69\n",
       "healthcare      22   62\n",
       "homemaker       20   50\n",
       "lawyer          21   53\n",
       "librarian       23   69\n",
       "marketing       24   55\n",
       "none            11   55\n",
       "other           13   64\n",
       "programmer      20   63\n",
       "retired         51   73\n",
       "salesman        18   66\n",
       "scientist       23   55\n",
       "student          7   42\n",
       "technician      21   55\n",
       "writer          18   60"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the min and max age for occupation\n",
    "users.groupby('occupation').age.agg(['min', 'max'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "2311563e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "occupation     gender\n",
       "administrator  F         40.638889\n",
       "               M         37.162791\n",
       "artist         F         30.307692\n",
       "               M         32.333333\n",
       "doctor         M         43.571429\n",
       "educator       F         39.115385\n",
       "               M         43.101449\n",
       "engineer       F         29.500000\n",
       "               M         36.600000\n",
       "entertainment  F         31.000000\n",
       "               M         29.000000\n",
       "executive      F         44.000000\n",
       "               M         38.172414\n",
       "healthcare     F         39.818182\n",
       "               M         45.400000\n",
       "homemaker      F         34.166667\n",
       "               M         23.000000\n",
       "lawyer         F         39.500000\n",
       "               M         36.200000\n",
       "librarian      F         40.000000\n",
       "               M         40.000000\n",
       "marketing      F         37.200000\n",
       "               M         37.875000\n",
       "none           F         36.500000\n",
       "               M         18.600000\n",
       "other          F         35.472222\n",
       "               M         34.028986\n",
       "programmer     F         32.166667\n",
       "               M         33.216667\n",
       "retired        F         70.000000\n",
       "               M         62.538462\n",
       "salesman       F         27.000000\n",
       "               M         38.555556\n",
       "scientist      F         28.333333\n",
       "               M         36.321429\n",
       "student        F         20.750000\n",
       "               M         22.669118\n",
       "technician     F         38.000000\n",
       "               M         32.961538\n",
       "writer         F         37.631579\n",
       "               M         35.346154\n",
       "Name: age, dtype: float64"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting the mean occupation for each gender\n",
    "users.groupby(['occupation', 'gender']).age.mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "290c95ea",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "occupation     gender\n",
       "administrator  F         0.455696\n",
       "               M         0.544304\n",
       "artist         F         0.464286\n",
       "               M         0.535714\n",
       "doctor         M         1.000000\n",
       "educator       F         0.273684\n",
       "               M         0.726316\n",
       "engineer       F         0.029851\n",
       "               M         0.970149\n",
       "entertainment  F         0.111111\n",
       "               M         0.888889\n",
       "executive      F         0.093750\n",
       "               M         0.906250\n",
       "healthcare     F         0.687500\n",
       "               M         0.312500\n",
       "homemaker      F         0.857143\n",
       "               M         0.142857\n",
       "lawyer         F         0.166667\n",
       "               M         0.833333\n",
       "librarian      F         0.568627\n",
       "               M         0.431373\n",
       "marketing      F         0.384615\n",
       "               M         0.615385\n",
       "none           F         0.444444\n",
       "               M         0.555556\n",
       "other          F         0.342857\n",
       "               M         0.657143\n",
       "programmer     F         0.090909\n",
       "               M         0.909091\n",
       "retired        F         0.071429\n",
       "               M         0.928571\n",
       "salesman       F         0.250000\n",
       "               M         0.750000\n",
       "scientist      F         0.096774\n",
       "               M         0.903226\n",
       "student        F         0.306122\n",
       "               M         0.693878\n",
       "technician     F         0.037037\n",
       "               M         0.962963\n",
       "writer         F         0.422222\n",
       "               M         0.577778\n",
       "Name: gender, dtype: float64"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# For each occupation present the percentage of women and men\n",
    "q1df1 = users.groupby(['occupation', 'gender']).agg({'gender': 'count'})\n",
    "q1df2 = users.groupby(['occupation']).count()\n",
    "\n",
    "q1df3 = q1df1.div(q1df2, level = \"occupation\")\n",
    "q1df3.loc[:, 'gender']"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "82fa0d97",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "24386e23",
   "metadata": {},
   "source": [
    "# Question 2"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "3b4b0608",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Goals</th>\n",
       "      <th>Shots on target</th>\n",
       "      <th>Shots off target</th>\n",
       "      <th>Shooting Accuracy</th>\n",
       "      <th>% Goals-to-shots</th>\n",
       "      <th>Total shots (inc. Blocked)</th>\n",
       "      <th>Hit Woodwork</th>\n",
       "      <th>Penalty goals</th>\n",
       "      <th>Penalties not scored</th>\n",
       "      <th>...</th>\n",
       "      <th>Saves made</th>\n",
       "      <th>Saves-to-shots ratio</th>\n",
       "      <th>Fouls Won</th>\n",
       "      <th>Fouls Conceded</th>\n",
       "      <th>Offsides</th>\n",
       "      <th>Yellow Cards</th>\n",
       "      <th>Red Cards</th>\n",
       "      <th>Subs on</th>\n",
       "      <th>Subs off</th>\n",
       "      <th>Players Used</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>51.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>13</td>\n",
       "      <td>81.3%</td>\n",
       "      <td>41</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>41.9%</td>\n",
       "      <td>12.9%</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>9</td>\n",
       "      <td>60.1%</td>\n",
       "      <td>53</td>\n",
       "      <td>73</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>50.0%</td>\n",
       "      <td>20.0%</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>66.7%</td>\n",
       "      <td>25</td>\n",
       "      <td>38</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>England</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>50.0%</td>\n",
       "      <td>17.2%</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>22</td>\n",
       "      <td>88.1%</td>\n",
       "      <td>43</td>\n",
       "      <td>45</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>France</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>24</td>\n",
       "      <td>37.9%</td>\n",
       "      <td>6.5%</td>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>54.6%</td>\n",
       "      <td>36</td>\n",
       "      <td>51</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>11</td>\n",
       "      <td>11</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>10</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>47.8%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>62.6%</td>\n",
       "      <td>63</td>\n",
       "      <td>49</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Greece</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>19.2%</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>13</td>\n",
       "      <td>65.1%</td>\n",
       "      <td>67</td>\n",
       "      <td>48</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Italy</td>\n",
       "      <td>6</td>\n",
       "      <td>34</td>\n",
       "      <td>45</td>\n",
       "      <td>43.0%</td>\n",
       "      <td>7.5%</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>20</td>\n",
       "      <td>74.1%</td>\n",
       "      <td>101</td>\n",
       "      <td>89</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "      <td>18</td>\n",
       "      <td>18</td>\n",
       "      <td>19</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>36</td>\n",
       "      <td>25.0%</td>\n",
       "      <td>4.1%</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>12</td>\n",
       "      <td>70.6%</td>\n",
       "      <td>35</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>15</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Poland</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>39.4%</td>\n",
       "      <td>5.2%</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>6</td>\n",
       "      <td>66.7%</td>\n",
       "      <td>48</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>42</td>\n",
       "      <td>34.3%</td>\n",
       "      <td>9.3%</td>\n",
       "      <td>82</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>71.5%</td>\n",
       "      <td>73</td>\n",
       "      <td>90</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>14</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Republic of Ireland</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>36.8%</td>\n",
       "      <td>5.2%</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>17</td>\n",
       "      <td>65.4%</td>\n",
       "      <td>43</td>\n",
       "      <td>51</td>\n",
       "      <td>11</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>31</td>\n",
       "      <td>22.5%</td>\n",
       "      <td>12.5%</td>\n",
       "      <td>59</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>77.0%</td>\n",
       "      <td>34</td>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>16</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Spain</td>\n",
       "      <td>12</td>\n",
       "      <td>42</td>\n",
       "      <td>33</td>\n",
       "      <td>55.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>93.8%</td>\n",
       "      <td>102</td>\n",
       "      <td>83</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>47.2%</td>\n",
       "      <td>13.8%</td>\n",
       "      <td>39</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>8</td>\n",
       "      <td>61.6%</td>\n",
       "      <td>35</td>\n",
       "      <td>51</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Ukraine</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>26</td>\n",
       "      <td>21.2%</td>\n",
       "      <td>6.0%</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>13</td>\n",
       "      <td>76.5%</td>\n",
       "      <td>48</td>\n",
       "      <td>31</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Team  Goals  Shots on target  Shots off target  \\\n",
       "0               Croatia      4               13                12   \n",
       "1        Czech Republic      4               13                18   \n",
       "2               Denmark      4               10                10   \n",
       "3               England      5               11                18   \n",
       "4                France      3               22                24   \n",
       "5               Germany     10               32                32   \n",
       "6                Greece      5                8                18   \n",
       "7                 Italy      6               34                45   \n",
       "8           Netherlands      2               12                36   \n",
       "9                Poland      2               15                23   \n",
       "10             Portugal      6               22                42   \n",
       "11  Republic of Ireland      1                7                12   \n",
       "12               Russia      5                9                31   \n",
       "13                Spain     12               42                33   \n",
       "14               Sweden      5               17                19   \n",
       "15              Ukraine      2                7                26   \n",
       "\n",
       "   Shooting Accuracy % Goals-to-shots  Total shots (inc. Blocked)  \\\n",
       "0              51.9%            16.0%                          32   \n",
       "1              41.9%            12.9%                          39   \n",
       "2              50.0%            20.0%                          27   \n",
       "3              50.0%            17.2%                          40   \n",
       "4              37.9%             6.5%                          65   \n",
       "5              47.8%            15.6%                          80   \n",
       "6              30.7%            19.2%                          32   \n",
       "7              43.0%             7.5%                         110   \n",
       "8              25.0%             4.1%                          60   \n",
       "9              39.4%             5.2%                          48   \n",
       "10             34.3%             9.3%                          82   \n",
       "11             36.8%             5.2%                          28   \n",
       "12             22.5%            12.5%                          59   \n",
       "13             55.9%            16.0%                         100   \n",
       "14             47.2%            13.8%                          39   \n",
       "15             21.2%             6.0%                          38   \n",
       "\n",
       "    Hit Woodwork  Penalty goals  Penalties not scored  ...  Saves made  \\\n",
       "0              0              0                     0  ...          13   \n",
       "1              0              0                     0  ...           9   \n",
       "2              1              0                     0  ...          10   \n",
       "3              0              0                     0  ...          22   \n",
       "4              1              0                     0  ...           6   \n",
       "5              2              1                     0  ...          10   \n",
       "6              1              1                     1  ...          13   \n",
       "7              2              0                     0  ...          20   \n",
       "8              2              0                     0  ...          12   \n",
       "9              0              0                     0  ...           6   \n",
       "10             6              0                     0  ...          10   \n",
       "11             0              0                     0  ...          17   \n",
       "12             2              0                     0  ...          10   \n",
       "13             0              1                     0  ...          15   \n",
       "14             3              0                     0  ...           8   \n",
       "15             0              0                     0  ...          13   \n",
       "\n",
       "    Saves-to-shots ratio  Fouls Won Fouls Conceded  Offsides  Yellow Cards  \\\n",
       "0                  81.3%         41             62         2             9   \n",
       "1                  60.1%         53             73         8             7   \n",
       "2                  66.7%         25             38         8             4   \n",
       "3                  88.1%         43             45         6             5   \n",
       "4                  54.6%         36             51         5             6   \n",
       "5                  62.6%         63             49        12             4   \n",
       "6                  65.1%         67             48        12             9   \n",
       "7                  74.1%        101             89        16            16   \n",
       "8                  70.6%         35             30         3             5   \n",
       "9                  66.7%         48             56         3             7   \n",
       "10                 71.5%         73             90        10            12   \n",
       "11                 65.4%         43             51        11             6   \n",
       "12                 77.0%         34             43         4             6   \n",
       "13                 93.8%        102             83        19            11   \n",
       "14                 61.6%         35             51         7             7   \n",
       "15                 76.5%         48             31         4             5   \n",
       "\n",
       "    Red Cards  Subs on  Subs off  Players Used  \n",
       "0           0        9         9            16  \n",
       "1           0       11        11            19  \n",
       "2           0        7         7            15  \n",
       "3           0       11        11            16  \n",
       "4           0       11        11            19  \n",
       "5           0       15        15            17  \n",
       "6           1       12        12            20  \n",
       "7           0       18        18            19  \n",
       "8           0        7         7            15  \n",
       "9           1        7         7            17  \n",
       "10          0       14        14            16  \n",
       "11          1       10        10            17  \n",
       "12          0        7         7            16  \n",
       "13          0       17        17            18  \n",
       "14          0        9         9            18  \n",
       "15          0        9         9            18  \n",
       "\n",
       "[16 rows x 35 columns]"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reading the data from address\n",
    "euro12 = pd.read_csv('https://raw.githubusercontent.com/guipsamora/pandas_exercises/master/02_Filtering_%26_Sorting/Euro12/Euro_2012_stats_TEAM.csv')\n",
    "euro12"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "8cebaf4c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0      4\n",
       "1      4\n",
       "2      4\n",
       "3      5\n",
       "4      3\n",
       "5     10\n",
       "6      5\n",
       "7      6\n",
       "8      2\n",
       "9      2\n",
       "10     6\n",
       "11     1\n",
       "12     5\n",
       "13    12\n",
       "14     5\n",
       "15     2\n",
       "Name: Goals, dtype: int64"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#selecting the goal column\n",
    "euro12.Goals"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "d3e982ad",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "16"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#total no of teams in 2012\n",
    "euro12.Team.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "061363cc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "35"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#no of columns in data set\n",
    "len(euro12.columns)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "6837e23f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Yellow Cards</th>\n",
       "      <th>Red Cards</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>England</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>France</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Greece</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Italy</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Poland</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Republic of Ireland</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Spain</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Ukraine</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Team  Yellow Cards  Red Cards\n",
       "0               Croatia             9          0\n",
       "1        Czech Republic             7          0\n",
       "2               Denmark             4          0\n",
       "3               England             5          0\n",
       "4                France             6          0\n",
       "5               Germany             4          0\n",
       "6                Greece             9          1\n",
       "7                 Italy            16          0\n",
       "8           Netherlands             5          0\n",
       "9                Poland             7          1\n",
       "10             Portugal            12          0\n",
       "11  Republic of Ireland             6          1\n",
       "12               Russia             6          0\n",
       "13                Spain            11          0\n",
       "14               Sweden             7          0\n",
       "15              Ukraine             5          0"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# viewing teams with red and yellow cards\n",
    "\n",
    "discipline = euro12[['Team', 'Yellow Cards', 'Red Cards']]\n",
    "discipline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "245d357d",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Yellow Cards</th>\n",
       "      <th>Red Cards</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Greece</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Poland</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Republic of Ireland</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Italy</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Spain</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>France</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>England</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Ukraine</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Team  Yellow Cards  Red Cards\n",
       "6                Greece             9          1\n",
       "9                Poland             7          1\n",
       "11  Republic of Ireland             6          1\n",
       "7                 Italy            16          0\n",
       "10             Portugal            12          0\n",
       "13                Spain            11          0\n",
       "0               Croatia             9          0\n",
       "1        Czech Republic             7          0\n",
       "14               Sweden             7          0\n",
       "4                France             6          0\n",
       "12               Russia             6          0\n",
       "3               England             5          0\n",
       "8           Netherlands             5          0\n",
       "15              Ukraine             5          0\n",
       "2               Denmark             4          0\n",
       "5               Germany             4          0"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q28=discipline.sort_values(by=['Red Cards', 'Yellow Cards'], ascending = False)\n",
    "q28"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "cc279918",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "bb0a60f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "7.4375"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting the mean yellow cards perteam\n",
    "discipline['Yellow Cards'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "105b2f36",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Goals</th>\n",
       "      <th>Shots on target</th>\n",
       "      <th>Shots off target</th>\n",
       "      <th>Shooting Accuracy</th>\n",
       "      <th>% Goals-to-shots</th>\n",
       "      <th>Total shots (inc. Blocked)</th>\n",
       "      <th>Hit Woodwork</th>\n",
       "      <th>Penalty goals</th>\n",
       "      <th>Penalties not scored</th>\n",
       "      <th>...</th>\n",
       "      <th>Saves made</th>\n",
       "      <th>Saves-to-shots ratio</th>\n",
       "      <th>Fouls Won</th>\n",
       "      <th>Fouls Conceded</th>\n",
       "      <th>Offsides</th>\n",
       "      <th>Yellow Cards</th>\n",
       "      <th>Red Cards</th>\n",
       "      <th>Subs on</th>\n",
       "      <th>Subs off</th>\n",
       "      <th>Players Used</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>10</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>47.8%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>62.6%</td>\n",
       "      <td>63</td>\n",
       "      <td>49</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Spain</td>\n",
       "      <td>12</td>\n",
       "      <td>42</td>\n",
       "      <td>33</td>\n",
       "      <td>55.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>15</td>\n",
       "      <td>93.8%</td>\n",
       "      <td>102</td>\n",
       "      <td>83</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "      <td>17</td>\n",
       "      <td>17</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Team  Goals  Shots on target  Shots off target Shooting Accuracy  \\\n",
       "5   Germany     10               32                32             47.8%   \n",
       "13    Spain     12               42                33             55.9%   \n",
       "\n",
       "   % Goals-to-shots  Total shots (inc. Blocked)  Hit Woodwork  Penalty goals  \\\n",
       "5             15.6%                          80             2              1   \n",
       "13            16.0%                         100             0              1   \n",
       "\n",
       "    Penalties not scored  ...  Saves made  Saves-to-shots ratio  Fouls Won  \\\n",
       "5                      0  ...          10                 62.6%         63   \n",
       "13                     0  ...          15                 93.8%        102   \n",
       "\n",
       "   Fouls Conceded  Offsides  Yellow Cards  Red Cards  Subs on  Subs off  \\\n",
       "5              49        12             4          0       15        15   \n",
       "13             83        19            11          0       17        17   \n",
       "\n",
       "    Players Used  \n",
       "5             17  \n",
       "13            18  \n",
       "\n",
       "[2 rows x 35 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# finding teams with more than 6 goals\n",
    "q210=euro12[euro12.Goals > 6]\n",
    "\n",
    "q210"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "2ec2de9f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Goals</th>\n",
       "      <th>Shots on target</th>\n",
       "      <th>Shots off target</th>\n",
       "      <th>Shooting Accuracy</th>\n",
       "      <th>% Goals-to-shots</th>\n",
       "      <th>Total shots (inc. Blocked)</th>\n",
       "      <th>Hit Woodwork</th>\n",
       "      <th>Penalty goals</th>\n",
       "      <th>Penalties not scored</th>\n",
       "      <th>...</th>\n",
       "      <th>Saves made</th>\n",
       "      <th>Saves-to-shots ratio</th>\n",
       "      <th>Fouls Won</th>\n",
       "      <th>Fouls Conceded</th>\n",
       "      <th>Offsides</th>\n",
       "      <th>Yellow Cards</th>\n",
       "      <th>Red Cards</th>\n",
       "      <th>Subs on</th>\n",
       "      <th>Subs off</th>\n",
       "      <th>Players Used</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>10</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>47.8%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>10</td>\n",
       "      <td>62.6%</td>\n",
       "      <td>63</td>\n",
       "      <td>49</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>15</td>\n",
       "      <td>15</td>\n",
       "      <td>17</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Greece</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>19.2%</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>13</td>\n",
       "      <td>65.1%</td>\n",
       "      <td>67</td>\n",
       "      <td>48</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>12</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>2 rows Ã— 35 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "      Team  Goals  Shots on target  Shots off target Shooting Accuracy  \\\n",
       "5  Germany     10               32                32             47.8%   \n",
       "6   Greece      5                8                18             30.7%   \n",
       "\n",
       "  % Goals-to-shots  Total shots (inc. Blocked)  Hit Woodwork  Penalty goals  \\\n",
       "5            15.6%                          80             2              1   \n",
       "6            19.2%                          32             1              1   \n",
       "\n",
       "   Penalties not scored  ...  Saves made  Saves-to-shots ratio  Fouls Won  \\\n",
       "5                     0  ...          10                 62.6%         63   \n",
       "6                     1  ...          13                 65.1%         67   \n",
       "\n",
       "  Fouls Conceded  Offsides  Yellow Cards  Red Cards  Subs on  Subs off  \\\n",
       "5             49        12             4          0       15        15   \n",
       "6             48        12             9          1       12        12   \n",
       "\n",
       "   Players Used  \n",
       "5            17  \n",
       "6            20  \n",
       "\n",
       "[2 rows x 35 columns]"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#finding teams with starting letter G\n",
    "\n",
    "q211=euro12[euro12.Team.str.startswith('G')]\n",
    "q211"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "abcc19b0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Goals</th>\n",
       "      <th>Shots on target</th>\n",
       "      <th>Shots off target</th>\n",
       "      <th>Shooting Accuracy</th>\n",
       "      <th>% Goals-to-shots</th>\n",
       "      <th>Total shots (inc. Blocked)</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>51.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>41.9%</td>\n",
       "      <td>12.9%</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>50.0%</td>\n",
       "      <td>20.0%</td>\n",
       "      <td>27</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>England</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>50.0%</td>\n",
       "      <td>17.2%</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>France</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>24</td>\n",
       "      <td>37.9%</td>\n",
       "      <td>6.5%</td>\n",
       "      <td>65</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>10</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>47.8%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>80</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Greece</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>19.2%</td>\n",
       "      <td>32</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Italy</td>\n",
       "      <td>6</td>\n",
       "      <td>34</td>\n",
       "      <td>45</td>\n",
       "      <td>43.0%</td>\n",
       "      <td>7.5%</td>\n",
       "      <td>110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>36</td>\n",
       "      <td>25.0%</td>\n",
       "      <td>4.1%</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Poland</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>39.4%</td>\n",
       "      <td>5.2%</td>\n",
       "      <td>48</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>42</td>\n",
       "      <td>34.3%</td>\n",
       "      <td>9.3%</td>\n",
       "      <td>82</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Republic of Ireland</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>36.8%</td>\n",
       "      <td>5.2%</td>\n",
       "      <td>28</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>31</td>\n",
       "      <td>22.5%</td>\n",
       "      <td>12.5%</td>\n",
       "      <td>59</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Spain</td>\n",
       "      <td>12</td>\n",
       "      <td>42</td>\n",
       "      <td>33</td>\n",
       "      <td>55.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>47.2%</td>\n",
       "      <td>13.8%</td>\n",
       "      <td>39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Ukraine</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>26</td>\n",
       "      <td>21.2%</td>\n",
       "      <td>6.0%</td>\n",
       "      <td>38</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Team  Goals  Shots on target  Shots off target  \\\n",
       "0               Croatia      4               13                12   \n",
       "1        Czech Republic      4               13                18   \n",
       "2               Denmark      4               10                10   \n",
       "3               England      5               11                18   \n",
       "4                France      3               22                24   \n",
       "5               Germany     10               32                32   \n",
       "6                Greece      5                8                18   \n",
       "7                 Italy      6               34                45   \n",
       "8           Netherlands      2               12                36   \n",
       "9                Poland      2               15                23   \n",
       "10             Portugal      6               22                42   \n",
       "11  Republic of Ireland      1                7                12   \n",
       "12               Russia      5                9                31   \n",
       "13                Spain     12               42                33   \n",
       "14               Sweden      5               17                19   \n",
       "15              Ukraine      2                7                26   \n",
       "\n",
       "   Shooting Accuracy % Goals-to-shots  Total shots (inc. Blocked)  \n",
       "0              51.9%            16.0%                          32  \n",
       "1              41.9%            12.9%                          39  \n",
       "2              50.0%            20.0%                          27  \n",
       "3              50.0%            17.2%                          40  \n",
       "4              37.9%             6.5%                          65  \n",
       "5              47.8%            15.6%                          80  \n",
       "6              30.7%            19.2%                          32  \n",
       "7              43.0%             7.5%                         110  \n",
       "8              25.0%             4.1%                          60  \n",
       "9              39.4%             5.2%                          48  \n",
       "10             34.3%             9.3%                          82  \n",
       "11             36.8%             5.2%                          28  \n",
       "12             22.5%            12.5%                          59  \n",
       "13             55.9%            16.0%                         100  \n",
       "14             47.2%            13.8%                          39  \n",
       "15             21.2%             6.0%                          38  "
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting the first 7 columns\n",
    "q212=euro12.iloc[: , :7]\n",
    "q212"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "af8fac96",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Goals</th>\n",
       "      <th>Shots on target</th>\n",
       "      <th>Shots off target</th>\n",
       "      <th>Shooting Accuracy</th>\n",
       "      <th>% Goals-to-shots</th>\n",
       "      <th>Total shots (inc. Blocked)</th>\n",
       "      <th>Hit Woodwork</th>\n",
       "      <th>Penalty goals</th>\n",
       "      <th>Penalties not scored</th>\n",
       "      <th>...</th>\n",
       "      <th>Clean Sheets</th>\n",
       "      <th>Blocks</th>\n",
       "      <th>Goals conceded</th>\n",
       "      <th>Saves made</th>\n",
       "      <th>Saves-to-shots ratio</th>\n",
       "      <th>Fouls Won</th>\n",
       "      <th>Fouls Conceded</th>\n",
       "      <th>Offsides</th>\n",
       "      <th>Yellow Cards</th>\n",
       "      <th>Red Cards</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>Croatia</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>12</td>\n",
       "      <td>51.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>32</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>3</td>\n",
       "      <td>13</td>\n",
       "      <td>81.3%</td>\n",
       "      <td>41</td>\n",
       "      <td>62</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>Czech Republic</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>18</td>\n",
       "      <td>41.9%</td>\n",
       "      <td>12.9%</td>\n",
       "      <td>39</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>6</td>\n",
       "      <td>9</td>\n",
       "      <td>60.1%</td>\n",
       "      <td>53</td>\n",
       "      <td>73</td>\n",
       "      <td>8</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>Denmark</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>50.0%</td>\n",
       "      <td>20.0%</td>\n",
       "      <td>27</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>5</td>\n",
       "      <td>10</td>\n",
       "      <td>66.7%</td>\n",
       "      <td>25</td>\n",
       "      <td>38</td>\n",
       "      <td>8</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>England</td>\n",
       "      <td>5</td>\n",
       "      <td>11</td>\n",
       "      <td>18</td>\n",
       "      <td>50.0%</td>\n",
       "      <td>17.2%</td>\n",
       "      <td>40</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>29</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>88.1%</td>\n",
       "      <td>43</td>\n",
       "      <td>45</td>\n",
       "      <td>6</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>France</td>\n",
       "      <td>3</td>\n",
       "      <td>22</td>\n",
       "      <td>24</td>\n",
       "      <td>37.9%</td>\n",
       "      <td>6.5%</td>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>54.6%</td>\n",
       "      <td>36</td>\n",
       "      <td>51</td>\n",
       "      <td>5</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>Germany</td>\n",
       "      <td>10</td>\n",
       "      <td>32</td>\n",
       "      <td>32</td>\n",
       "      <td>47.8%</td>\n",
       "      <td>15.6%</td>\n",
       "      <td>80</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>11</td>\n",
       "      <td>6</td>\n",
       "      <td>10</td>\n",
       "      <td>62.6%</td>\n",
       "      <td>63</td>\n",
       "      <td>49</td>\n",
       "      <td>12</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>Greece</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>18</td>\n",
       "      <td>30.7%</td>\n",
       "      <td>19.2%</td>\n",
       "      <td>32</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>23</td>\n",
       "      <td>7</td>\n",
       "      <td>13</td>\n",
       "      <td>65.1%</td>\n",
       "      <td>67</td>\n",
       "      <td>48</td>\n",
       "      <td>12</td>\n",
       "      <td>9</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Italy</td>\n",
       "      <td>6</td>\n",
       "      <td>34</td>\n",
       "      <td>45</td>\n",
       "      <td>43.0%</td>\n",
       "      <td>7.5%</td>\n",
       "      <td>110</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>18</td>\n",
       "      <td>7</td>\n",
       "      <td>20</td>\n",
       "      <td>74.1%</td>\n",
       "      <td>101</td>\n",
       "      <td>89</td>\n",
       "      <td>16</td>\n",
       "      <td>16</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>Netherlands</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>36</td>\n",
       "      <td>25.0%</td>\n",
       "      <td>4.1%</td>\n",
       "      <td>60</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>5</td>\n",
       "      <td>12</td>\n",
       "      <td>70.6%</td>\n",
       "      <td>35</td>\n",
       "      <td>30</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>Poland</td>\n",
       "      <td>2</td>\n",
       "      <td>15</td>\n",
       "      <td>23</td>\n",
       "      <td>39.4%</td>\n",
       "      <td>5.2%</td>\n",
       "      <td>48</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>6</td>\n",
       "      <td>66.7%</td>\n",
       "      <td>48</td>\n",
       "      <td>56</td>\n",
       "      <td>3</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>Portugal</td>\n",
       "      <td>6</td>\n",
       "      <td>22</td>\n",
       "      <td>42</td>\n",
       "      <td>34.3%</td>\n",
       "      <td>9.3%</td>\n",
       "      <td>82</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>2</td>\n",
       "      <td>11</td>\n",
       "      <td>4</td>\n",
       "      <td>10</td>\n",
       "      <td>71.5%</td>\n",
       "      <td>73</td>\n",
       "      <td>90</td>\n",
       "      <td>10</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>Republic of Ireland</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>12</td>\n",
       "      <td>36.8%</td>\n",
       "      <td>5.2%</td>\n",
       "      <td>28</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>23</td>\n",
       "      <td>9</td>\n",
       "      <td>17</td>\n",
       "      <td>65.4%</td>\n",
       "      <td>43</td>\n",
       "      <td>51</td>\n",
       "      <td>11</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>5</td>\n",
       "      <td>9</td>\n",
       "      <td>31</td>\n",
       "      <td>22.5%</td>\n",
       "      <td>12.5%</td>\n",
       "      <td>59</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>3</td>\n",
       "      <td>10</td>\n",
       "      <td>77.0%</td>\n",
       "      <td>34</td>\n",
       "      <td>43</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>Spain</td>\n",
       "      <td>12</td>\n",
       "      <td>42</td>\n",
       "      <td>33</td>\n",
       "      <td>55.9%</td>\n",
       "      <td>16.0%</td>\n",
       "      <td>100</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>15</td>\n",
       "      <td>93.8%</td>\n",
       "      <td>102</td>\n",
       "      <td>83</td>\n",
       "      <td>19</td>\n",
       "      <td>11</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>Sweden</td>\n",
       "      <td>5</td>\n",
       "      <td>17</td>\n",
       "      <td>19</td>\n",
       "      <td>47.2%</td>\n",
       "      <td>13.8%</td>\n",
       "      <td>39</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>1</td>\n",
       "      <td>12</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>61.6%</td>\n",
       "      <td>35</td>\n",
       "      <td>51</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>Ukraine</td>\n",
       "      <td>2</td>\n",
       "      <td>7</td>\n",
       "      <td>26</td>\n",
       "      <td>21.2%</td>\n",
       "      <td>6.0%</td>\n",
       "      <td>38</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>13</td>\n",
       "      <td>76.5%</td>\n",
       "      <td>48</td>\n",
       "      <td>31</td>\n",
       "      <td>4</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>16 rows Ã— 32 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   Team  Goals  Shots on target  Shots off target  \\\n",
       "0               Croatia      4               13                12   \n",
       "1        Czech Republic      4               13                18   \n",
       "2               Denmark      4               10                10   \n",
       "3               England      5               11                18   \n",
       "4                France      3               22                24   \n",
       "5               Germany     10               32                32   \n",
       "6                Greece      5                8                18   \n",
       "7                 Italy      6               34                45   \n",
       "8           Netherlands      2               12                36   \n",
       "9                Poland      2               15                23   \n",
       "10             Portugal      6               22                42   \n",
       "11  Republic of Ireland      1                7                12   \n",
       "12               Russia      5                9                31   \n",
       "13                Spain     12               42                33   \n",
       "14               Sweden      5               17                19   \n",
       "15              Ukraine      2                7                26   \n",
       "\n",
       "   Shooting Accuracy % Goals-to-shots  Total shots (inc. Blocked)  \\\n",
       "0              51.9%            16.0%                          32   \n",
       "1              41.9%            12.9%                          39   \n",
       "2              50.0%            20.0%                          27   \n",
       "3              50.0%            17.2%                          40   \n",
       "4              37.9%             6.5%                          65   \n",
       "5              47.8%            15.6%                          80   \n",
       "6              30.7%            19.2%                          32   \n",
       "7              43.0%             7.5%                         110   \n",
       "8              25.0%             4.1%                          60   \n",
       "9              39.4%             5.2%                          48   \n",
       "10             34.3%             9.3%                          82   \n",
       "11             36.8%             5.2%                          28   \n",
       "12             22.5%            12.5%                          59   \n",
       "13             55.9%            16.0%                         100   \n",
       "14             47.2%            13.8%                          39   \n",
       "15             21.2%             6.0%                          38   \n",
       "\n",
       "    Hit Woodwork  Penalty goals  Penalties not scored  ...  Clean Sheets  \\\n",
       "0              0              0                     0  ...             0   \n",
       "1              0              0                     0  ...             1   \n",
       "2              1              0                     0  ...             1   \n",
       "3              0              0                     0  ...             2   \n",
       "4              1              0                     0  ...             1   \n",
       "5              2              1                     0  ...             1   \n",
       "6              1              1                     1  ...             1   \n",
       "7              2              0                     0  ...             2   \n",
       "8              2              0                     0  ...             0   \n",
       "9              0              0                     0  ...             0   \n",
       "10             6              0                     0  ...             2   \n",
       "11             0              0                     0  ...             0   \n",
       "12             2              0                     0  ...             0   \n",
       "13             0              1                     0  ...             5   \n",
       "14             3              0                     0  ...             1   \n",
       "15             0              0                     0  ...             0   \n",
       "\n",
       "    Blocks  Goals conceded Saves made  Saves-to-shots ratio  Fouls Won  \\\n",
       "0       10               3         13                 81.3%         41   \n",
       "1       10               6          9                 60.1%         53   \n",
       "2       10               5         10                 66.7%         25   \n",
       "3       29               3         22                 88.1%         43   \n",
       "4        7               5          6                 54.6%         36   \n",
       "5       11               6         10                 62.6%         63   \n",
       "6       23               7         13                 65.1%         67   \n",
       "7       18               7         20                 74.1%        101   \n",
       "8        9               5         12                 70.6%         35   \n",
       "9        8               3          6                 66.7%         48   \n",
       "10      11               4         10                 71.5%         73   \n",
       "11      23               9         17                 65.4%         43   \n",
       "12       8               3         10                 77.0%         34   \n",
       "13       8               1         15                 93.8%        102   \n",
       "14      12               5          8                 61.6%         35   \n",
       "15       4               4         13                 76.5%         48   \n",
       "\n",
       "    Fouls Conceded  Offsides  Yellow Cards  Red Cards  \n",
       "0               62         2             9          0  \n",
       "1               73         8             7          0  \n",
       "2               38         8             4          0  \n",
       "3               45         6             5          0  \n",
       "4               51         5             6          0  \n",
       "5               49        12             4          0  \n",
       "6               48        12             9          1  \n",
       "7               89        16            16          0  \n",
       "8               30         3             5          0  \n",
       "9               56         3             7          1  \n",
       "10              90        10            12          0  \n",
       "11              51        11             6          1  \n",
       "12              43         4             6          0  \n",
       "13              83        19            11          0  \n",
       "14              51         7             7          0  \n",
       "15              31         4             5          0  \n",
       "\n",
       "[16 rows x 32 columns]"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting all but last 3 columns\n",
    "q213=euro12.iloc[: , :32]\n",
    "q213"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "3bfea9e7",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Team</th>\n",
       "      <th>Shooting Accuracy</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>England</td>\n",
       "      <td>50.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>Italy</td>\n",
       "      <td>43.0%</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>Russia</td>\n",
       "      <td>22.5%</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "       Team Shooting Accuracy\n",
       "3   England             50.0%\n",
       "7     Italy             43.0%\n",
       "12   Russia             22.5%"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting only the shooting accuracy\n",
    "q214=euro12.loc[euro12.Team.isin(['England', 'Italy', 'Russia']), ['Team','Shooting Accuracy']]\n",
    "q214"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "4cc740cf",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "fd919ace",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "b736b2f8",
   "metadata": {},
   "source": [
    "# Question 3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "8ea96810",
   "metadata": {},
   "outputs": [],
   "source": [
    "# creating three series based on conditions\n",
    "q31 = pd.Series(np.random.randint(1, high=5, size=100))\n",
    "q32 = pd.Series(np.random.randint(1, high=4, size=100))\n",
    "q33 = pd.Series(np.random.randint(10000, high=30001, size=100))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "26703377",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "      <th>1</th>\n",
       "      <th>2</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>20958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>22729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>27395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>14298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>24513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>24410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>15100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>20344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>21621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>12992</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    0  1      2\n",
       "0   4  1  20958\n",
       "1   1  2  22729\n",
       "2   1  1  27395\n",
       "3   3  3  14298\n",
       "4   3  3  24513\n",
       ".. .. ..    ...\n",
       "95  2  2  24410\n",
       "96  4  2  15100\n",
       "97  2  1  20344\n",
       "98  4  3  21621\n",
       "99  3  2  12992\n",
       "\n",
       "[100 rows x 3 columns]"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# joining the three series in dataframe\n",
    "dfq3 = pd.concat([q31, q32, q33], axis=1)\n",
    "dfq3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "3554de1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>bedrs</th>\n",
       "      <th>bathrs</th>\n",
       "      <th>price_sqr_meter</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>20958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>22729</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>27395</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>14298</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>24513</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>24410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>15100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>20344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>21621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>12992</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>100 rows Ã— 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "    bedrs  bathrs  price_sqr_meter\n",
       "0       4       1            20958\n",
       "1       1       2            22729\n",
       "2       1       1            27395\n",
       "3       3       3            14298\n",
       "4       3       3            24513\n",
       "..    ...     ...              ...\n",
       "95      2       2            24410\n",
       "96      4       2            15100\n",
       "97      2       1            20344\n",
       "98      4       3            21621\n",
       "99      3       2            12992\n",
       "\n",
       "[100 rows x 3 columns]"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# renaming the columns\n",
    "dfq3.rename(columns = {0: 'bedrs', 1: 'bathrs', 2: 'price_sqr_meter'}, inplace=True)\n",
    "dfq3"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "39cf579f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0         4\n",
       "1         1\n",
       "2         1\n",
       "3         3\n",
       "4         3\n",
       "      ...  \n",
       "95    24410\n",
       "96    15100\n",
       "97    20344\n",
       "98    21621\n",
       "99    12992\n",
       "Length: 300, dtype: int32"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#creating a bigcolumn\n",
    "bigcolumn = pd.concat([q31, q32, q33], axis=0)\n",
    "bigcolumn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "fbf031d7",
   "metadata": {},
   "outputs": [],
   "source": [
    "bigcolumn = bigcolumn.to_frame()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "eb666511",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>95</th>\n",
       "      <td>24410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>96</th>\n",
       "      <td>15100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>97</th>\n",
       "      <td>20344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>98</th>\n",
       "      <td>21621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>99</th>\n",
       "      <td>12992</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>300 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "        0\n",
       "0       4\n",
       "1       1\n",
       "2       1\n",
       "3       3\n",
       "4       3\n",
       "..    ...\n",
       "95  24410\n",
       "96  15100\n",
       "97  20344\n",
       "98  21621\n",
       "99  12992\n",
       "\n",
       "[300 rows x 1 columns]"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bigcolumn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "26e59f96",
   "metadata": {},
   "outputs": [],
   "source": [
    "#resetting the index\n",
    "bigcolumn=bigcolumn.reset_index(drop=True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "d4eb87bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>0</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>295</th>\n",
       "      <td>24410</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>296</th>\n",
       "      <td>15100</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>297</th>\n",
       "      <td>20344</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>298</th>\n",
       "      <td>21621</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>299</th>\n",
       "      <td>12992</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>300 rows Ã— 1 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "         0\n",
       "0        4\n",
       "1        1\n",
       "2        1\n",
       "3        3\n",
       "4        3\n",
       "..     ...\n",
       "295  24410\n",
       "296  15100\n",
       "297  20344\n",
       "298  21621\n",
       "299  12992\n",
       "\n",
       "[300 rows x 1 columns]"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "bigcolumn"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "52594d37",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "4cc8cddb",
   "metadata": {},
   "source": [
    "# Question 4"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "9ded4b85",
   "metadata": {},
   "outputs": [],
   "source": [
    "# reading the data from wind.txt\n",
    "import datetime\n",
    "dfq4 = pd.read_csv('wind.txt', sep = \"\\s+\", parse_dates = [[0,1,2]])\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "47181e06",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2061-01-01</td>\n",
       "      <td>15.04</td>\n",
       "      <td>14.96</td>\n",
       "      <td>13.17</td>\n",
       "      <td>9.29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.67</td>\n",
       "      <td>10.25</td>\n",
       "      <td>10.83</td>\n",
       "      <td>12.58</td>\n",
       "      <td>18.50</td>\n",
       "      <td>15.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2061-01-02</td>\n",
       "      <td>14.71</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.83</td>\n",
       "      <td>6.50</td>\n",
       "      <td>12.62</td>\n",
       "      <td>7.67</td>\n",
       "      <td>11.50</td>\n",
       "      <td>10.04</td>\n",
       "      <td>9.79</td>\n",
       "      <td>9.67</td>\n",
       "      <td>17.54</td>\n",
       "      <td>13.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2061-01-03</td>\n",
       "      <td>18.50</td>\n",
       "      <td>16.88</td>\n",
       "      <td>12.33</td>\n",
       "      <td>10.13</td>\n",
       "      <td>11.17</td>\n",
       "      <td>6.17</td>\n",
       "      <td>11.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.50</td>\n",
       "      <td>7.67</td>\n",
       "      <td>12.75</td>\n",
       "      <td>12.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2061-01-04</td>\n",
       "      <td>10.58</td>\n",
       "      <td>6.63</td>\n",
       "      <td>11.75</td>\n",
       "      <td>4.58</td>\n",
       "      <td>4.54</td>\n",
       "      <td>2.88</td>\n",
       "      <td>8.63</td>\n",
       "      <td>1.79</td>\n",
       "      <td>5.83</td>\n",
       "      <td>5.88</td>\n",
       "      <td>5.46</td>\n",
       "      <td>10.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2061-01-05</td>\n",
       "      <td>13.33</td>\n",
       "      <td>13.25</td>\n",
       "      <td>11.42</td>\n",
       "      <td>6.17</td>\n",
       "      <td>10.71</td>\n",
       "      <td>8.21</td>\n",
       "      <td>11.92</td>\n",
       "      <td>6.54</td>\n",
       "      <td>10.92</td>\n",
       "      <td>10.34</td>\n",
       "      <td>12.92</td>\n",
       "      <td>11.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6569</th>\n",
       "      <td>1978-12-27</td>\n",
       "      <td>17.58</td>\n",
       "      <td>16.96</td>\n",
       "      <td>17.62</td>\n",
       "      <td>8.08</td>\n",
       "      <td>13.21</td>\n",
       "      <td>11.67</td>\n",
       "      <td>14.46</td>\n",
       "      <td>15.59</td>\n",
       "      <td>14.04</td>\n",
       "      <td>14.00</td>\n",
       "      <td>17.21</td>\n",
       "      <td>40.08</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6570</th>\n",
       "      <td>1978-12-28</td>\n",
       "      <td>13.21</td>\n",
       "      <td>5.46</td>\n",
       "      <td>13.46</td>\n",
       "      <td>5.00</td>\n",
       "      <td>8.12</td>\n",
       "      <td>9.42</td>\n",
       "      <td>14.33</td>\n",
       "      <td>16.25</td>\n",
       "      <td>15.25</td>\n",
       "      <td>18.05</td>\n",
       "      <td>21.79</td>\n",
       "      <td>41.46</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6571</th>\n",
       "      <td>1978-12-29</td>\n",
       "      <td>14.00</td>\n",
       "      <td>10.29</td>\n",
       "      <td>14.42</td>\n",
       "      <td>8.71</td>\n",
       "      <td>9.71</td>\n",
       "      <td>10.54</td>\n",
       "      <td>19.17</td>\n",
       "      <td>12.46</td>\n",
       "      <td>14.50</td>\n",
       "      <td>16.42</td>\n",
       "      <td>18.88</td>\n",
       "      <td>29.58</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6572</th>\n",
       "      <td>1978-12-30</td>\n",
       "      <td>18.50</td>\n",
       "      <td>14.04</td>\n",
       "      <td>21.29</td>\n",
       "      <td>9.13</td>\n",
       "      <td>12.75</td>\n",
       "      <td>9.71</td>\n",
       "      <td>18.08</td>\n",
       "      <td>12.87</td>\n",
       "      <td>12.46</td>\n",
       "      <td>12.12</td>\n",
       "      <td>14.67</td>\n",
       "      <td>28.79</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6573</th>\n",
       "      <td>1978-12-31</td>\n",
       "      <td>20.33</td>\n",
       "      <td>17.41</td>\n",
       "      <td>27.29</td>\n",
       "      <td>9.59</td>\n",
       "      <td>12.08</td>\n",
       "      <td>10.13</td>\n",
       "      <td>19.25</td>\n",
       "      <td>11.63</td>\n",
       "      <td>11.58</td>\n",
       "      <td>11.38</td>\n",
       "      <td>12.08</td>\n",
       "      <td>22.08</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>6574 rows Ã— 13 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       Yr_Mo_Dy    RPT    VAL    ROS    KIL    SHA    BIR    DUB    CLA  \\\n",
       "0    2061-01-01  15.04  14.96  13.17   9.29    NaN   9.87  13.67  10.25   \n",
       "1    2061-01-02  14.71    NaN  10.83   6.50  12.62   7.67  11.50  10.04   \n",
       "2    2061-01-03  18.50  16.88  12.33  10.13  11.17   6.17  11.25    NaN   \n",
       "3    2061-01-04  10.58   6.63  11.75   4.58   4.54   2.88   8.63   1.79   \n",
       "4    2061-01-05  13.33  13.25  11.42   6.17  10.71   8.21  11.92   6.54   \n",
       "...         ...    ...    ...    ...    ...    ...    ...    ...    ...   \n",
       "6569 1978-12-27  17.58  16.96  17.62   8.08  13.21  11.67  14.46  15.59   \n",
       "6570 1978-12-28  13.21   5.46  13.46   5.00   8.12   9.42  14.33  16.25   \n",
       "6571 1978-12-29  14.00  10.29  14.42   8.71   9.71  10.54  19.17  12.46   \n",
       "6572 1978-12-30  18.50  14.04  21.29   9.13  12.75   9.71  18.08  12.87   \n",
       "6573 1978-12-31  20.33  17.41  27.29   9.59  12.08  10.13  19.25  11.63   \n",
       "\n",
       "        MUL    CLO    BEL    MAL  \n",
       "0     10.83  12.58  18.50  15.04  \n",
       "1      9.79   9.67  17.54  13.83  \n",
       "2      8.50   7.67  12.75  12.71  \n",
       "3      5.83   5.88   5.46  10.88  \n",
       "4     10.92  10.34  12.92  11.83  \n",
       "...     ...    ...    ...    ...  \n",
       "6569  14.04  14.00  17.21  40.08  \n",
       "6570  15.25  18.05  21.79  41.46  \n",
       "6571  14.50  16.42  18.88  29.58  \n",
       "6572  12.46  12.12  14.67  28.79  \n",
       "6573  11.58  11.38  12.08  22.08  \n",
       "\n",
       "[6574 rows x 13 columns]"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data=dfq4\n",
    "\n",
    "data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "6b61ca27",
   "metadata": {},
   "outputs": [],
   "source": [
    "# function that uses datetime\n",
    "def q4fn(x):\n",
    "  year = x.year - 100 if x.year > 1979 else x.year\n",
    "  return datetime.date(year, x.month, x.day)\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "efdd96bf",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1961-01-01</td>\n",
       "      <td>15.04</td>\n",
       "      <td>14.96</td>\n",
       "      <td>13.17</td>\n",
       "      <td>9.29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.67</td>\n",
       "      <td>10.25</td>\n",
       "      <td>10.83</td>\n",
       "      <td>12.58</td>\n",
       "      <td>18.50</td>\n",
       "      <td>15.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1961-01-02</td>\n",
       "      <td>14.71</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.83</td>\n",
       "      <td>6.50</td>\n",
       "      <td>12.62</td>\n",
       "      <td>7.67</td>\n",
       "      <td>11.50</td>\n",
       "      <td>10.04</td>\n",
       "      <td>9.79</td>\n",
       "      <td>9.67</td>\n",
       "      <td>17.54</td>\n",
       "      <td>13.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1961-01-03</td>\n",
       "      <td>18.50</td>\n",
       "      <td>16.88</td>\n",
       "      <td>12.33</td>\n",
       "      <td>10.13</td>\n",
       "      <td>11.17</td>\n",
       "      <td>6.17</td>\n",
       "      <td>11.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.50</td>\n",
       "      <td>7.67</td>\n",
       "      <td>12.75</td>\n",
       "      <td>12.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1961-01-04</td>\n",
       "      <td>10.58</td>\n",
       "      <td>6.63</td>\n",
       "      <td>11.75</td>\n",
       "      <td>4.58</td>\n",
       "      <td>4.54</td>\n",
       "      <td>2.88</td>\n",
       "      <td>8.63</td>\n",
       "      <td>1.79</td>\n",
       "      <td>5.83</td>\n",
       "      <td>5.88</td>\n",
       "      <td>5.46</td>\n",
       "      <td>10.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1961-01-05</td>\n",
       "      <td>13.33</td>\n",
       "      <td>13.25</td>\n",
       "      <td>11.42</td>\n",
       "      <td>6.17</td>\n",
       "      <td>10.71</td>\n",
       "      <td>8.21</td>\n",
       "      <td>11.92</td>\n",
       "      <td>6.54</td>\n",
       "      <td>10.92</td>\n",
       "      <td>10.34</td>\n",
       "      <td>12.92</td>\n",
       "      <td>11.83</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Yr_Mo_Dy    RPT    VAL    ROS    KIL    SHA   BIR    DUB    CLA    MUL  \\\n",
       "0  1961-01-01  15.04  14.96  13.17   9.29    NaN  9.87  13.67  10.25  10.83   \n",
       "1  1961-01-02  14.71    NaN  10.83   6.50  12.62  7.67  11.50  10.04   9.79   \n",
       "2  1961-01-03  18.50  16.88  12.33  10.13  11.17  6.17  11.25    NaN   8.50   \n",
       "3  1961-01-04  10.58   6.63  11.75   4.58   4.54  2.88   8.63   1.79   5.83   \n",
       "4  1961-01-05  13.33  13.25  11.42   6.17  10.71  8.21  11.92   6.54  10.92   \n",
       "\n",
       "     CLO    BEL    MAL  \n",
       "0  12.58  18.50  15.04  \n",
       "1   9.67  17.54  13.83  \n",
       "2   7.67  12.75  12.71  \n",
       "3   5.88   5.46  10.88  \n",
       "4  10.34  12.92  11.83  "
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# fixing the data\n",
    "data['Yr_Mo_Dy'] = data['Yr_Mo_Dy'].apply(q4fn)\n",
    "\n",
    "\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "959ec28a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1961-01-01</th>\n",
       "      <td>15.04</td>\n",
       "      <td>14.96</td>\n",
       "      <td>13.17</td>\n",
       "      <td>9.29</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.87</td>\n",
       "      <td>13.67</td>\n",
       "      <td>10.25</td>\n",
       "      <td>10.83</td>\n",
       "      <td>12.58</td>\n",
       "      <td>18.50</td>\n",
       "      <td>15.04</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-02</th>\n",
       "      <td>14.71</td>\n",
       "      <td>NaN</td>\n",
       "      <td>10.83</td>\n",
       "      <td>6.50</td>\n",
       "      <td>12.62</td>\n",
       "      <td>7.67</td>\n",
       "      <td>11.50</td>\n",
       "      <td>10.04</td>\n",
       "      <td>9.79</td>\n",
       "      <td>9.67</td>\n",
       "      <td>17.54</td>\n",
       "      <td>13.83</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-03</th>\n",
       "      <td>18.50</td>\n",
       "      <td>16.88</td>\n",
       "      <td>12.33</td>\n",
       "      <td>10.13</td>\n",
       "      <td>11.17</td>\n",
       "      <td>6.17</td>\n",
       "      <td>11.25</td>\n",
       "      <td>NaN</td>\n",
       "      <td>8.50</td>\n",
       "      <td>7.67</td>\n",
       "      <td>12.75</td>\n",
       "      <td>12.71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-04</th>\n",
       "      <td>10.58</td>\n",
       "      <td>6.63</td>\n",
       "      <td>11.75</td>\n",
       "      <td>4.58</td>\n",
       "      <td>4.54</td>\n",
       "      <td>2.88</td>\n",
       "      <td>8.63</td>\n",
       "      <td>1.79</td>\n",
       "      <td>5.83</td>\n",
       "      <td>5.88</td>\n",
       "      <td>5.46</td>\n",
       "      <td>10.88</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-05</th>\n",
       "      <td>13.33</td>\n",
       "      <td>13.25</td>\n",
       "      <td>11.42</td>\n",
       "      <td>6.17</td>\n",
       "      <td>10.71</td>\n",
       "      <td>8.21</td>\n",
       "      <td>11.92</td>\n",
       "      <td>6.54</td>\n",
       "      <td>10.92</td>\n",
       "      <td>10.34</td>\n",
       "      <td>12.92</td>\n",
       "      <td>11.83</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "              RPT    VAL    ROS    KIL    SHA   BIR    DUB    CLA    MUL  \\\n",
       "Yr_Mo_Dy                                                                   \n",
       "1961-01-01  15.04  14.96  13.17   9.29    NaN  9.87  13.67  10.25  10.83   \n",
       "1961-01-02  14.71    NaN  10.83   6.50  12.62  7.67  11.50  10.04   9.79   \n",
       "1961-01-03  18.50  16.88  12.33  10.13  11.17  6.17  11.25    NaN   8.50   \n",
       "1961-01-04  10.58   6.63  11.75   4.58   4.54  2.88   8.63   1.79   5.83   \n",
       "1961-01-05  13.33  13.25  11.42   6.17  10.71  8.21  11.92   6.54  10.92   \n",
       "\n",
       "              CLO    BEL    MAL  \n",
       "Yr_Mo_Dy                         \n",
       "1961-01-01  12.58  18.50  15.04  \n",
       "1961-01-02   9.67  17.54  13.83  \n",
       "1961-01-03   7.67  12.75  12.71  \n",
       "1961-01-04   5.88   5.46  10.88  \n",
       "1961-01-05  10.34  12.92  11.83  "
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# changing the date datatype\n",
    "data[\"Yr_Mo_Dy\"] = pd.to_datetime(data[\"Yr_Mo_Dy\"])\n",
    "\n",
    "# setting the index\n",
    "data = data.set_index('Yr_Mo_Dy')\n",
    "\n",
    "data.head()\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "4849528a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RPT    6\n",
       "VAL    3\n",
       "ROS    2\n",
       "KIL    5\n",
       "SHA    2\n",
       "BIR    0\n",
       "DUB    3\n",
       "CLA    2\n",
       "MUL    3\n",
       "CLO    1\n",
       "BEL    0\n",
       "MAL    4\n",
       "dtype: int64"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#getting the missing values\n",
    "data.isnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "683c758b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RPT    6568\n",
       "VAL    6571\n",
       "ROS    6572\n",
       "KIL    6569\n",
       "SHA    6572\n",
       "BIR    6574\n",
       "DUB    6571\n",
       "CLA    6572\n",
       "MUL    6571\n",
       "CLO    6573\n",
       "BEL    6574\n",
       "MAL    6570\n",
       "dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting non missing values\n",
    "data.notnull().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "f302a9ef",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "10.227883764282181"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#Calculating the mean windspeeds of the windspeeds over all the locations and all the times.\n",
    "data.sum().sum() / data.notna().sum().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "cac17d04",
   "metadata": {},
   "outputs": [],
   "source": [
    "# creating dataframe\n",
    "loc_stats=data.describe(percentiles=[])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "06040ca0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>6568.000000</td>\n",
       "      <td>6571.000000</td>\n",
       "      <td>6572.000000</td>\n",
       "      <td>6569.000000</td>\n",
       "      <td>6572.000000</td>\n",
       "      <td>6574.000000</td>\n",
       "      <td>6571.000000</td>\n",
       "      <td>6572.000000</td>\n",
       "      <td>6571.000000</td>\n",
       "      <td>6573.000000</td>\n",
       "      <td>6574.000000</td>\n",
       "      <td>6570.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>12.362987</td>\n",
       "      <td>10.644314</td>\n",
       "      <td>11.660526</td>\n",
       "      <td>6.306468</td>\n",
       "      <td>10.455834</td>\n",
       "      <td>7.092254</td>\n",
       "      <td>9.797343</td>\n",
       "      <td>8.495053</td>\n",
       "      <td>8.493590</td>\n",
       "      <td>8.707332</td>\n",
       "      <td>13.121007</td>\n",
       "      <td>15.599079</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>5.618413</td>\n",
       "      <td>5.267356</td>\n",
       "      <td>5.008450</td>\n",
       "      <td>3.605811</td>\n",
       "      <td>4.936125</td>\n",
       "      <td>3.968683</td>\n",
       "      <td>4.977555</td>\n",
       "      <td>4.499449</td>\n",
       "      <td>4.166872</td>\n",
       "      <td>4.503954</td>\n",
       "      <td>5.835037</td>\n",
       "      <td>6.699794</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.670000</td>\n",
       "      <td>0.210000</td>\n",
       "      <td>1.500000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.130000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.000000</td>\n",
       "      <td>0.040000</td>\n",
       "      <td>0.130000</td>\n",
       "      <td>0.670000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>11.710000</td>\n",
       "      <td>10.170000</td>\n",
       "      <td>10.920000</td>\n",
       "      <td>5.750000</td>\n",
       "      <td>9.960000</td>\n",
       "      <td>6.830000</td>\n",
       "      <td>9.210000</td>\n",
       "      <td>8.080000</td>\n",
       "      <td>8.170000</td>\n",
       "      <td>8.290000</td>\n",
       "      <td>12.500000</td>\n",
       "      <td>15.000000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>35.800000</td>\n",
       "      <td>33.370000</td>\n",
       "      <td>33.840000</td>\n",
       "      <td>28.460000</td>\n",
       "      <td>37.540000</td>\n",
       "      <td>26.160000</td>\n",
       "      <td>30.370000</td>\n",
       "      <td>31.080000</td>\n",
       "      <td>25.880000</td>\n",
       "      <td>28.210000</td>\n",
       "      <td>42.380000</td>\n",
       "      <td>42.540000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               RPT          VAL          ROS          KIL          SHA  \\\n",
       "count  6568.000000  6571.000000  6572.000000  6569.000000  6572.000000   \n",
       "mean     12.362987    10.644314    11.660526     6.306468    10.455834   \n",
       "std       5.618413     5.267356     5.008450     3.605811     4.936125   \n",
       "min       0.670000     0.210000     1.500000     0.000000     0.130000   \n",
       "50%      11.710000    10.170000    10.920000     5.750000     9.960000   \n",
       "max      35.800000    33.370000    33.840000    28.460000    37.540000   \n",
       "\n",
       "               BIR          DUB          CLA          MUL          CLO  \\\n",
       "count  6574.000000  6571.000000  6572.000000  6571.000000  6573.000000   \n",
       "mean      7.092254     9.797343     8.495053     8.493590     8.707332   \n",
       "std       3.968683     4.977555     4.499449     4.166872     4.503954   \n",
       "min       0.000000     0.000000     0.000000     0.000000     0.040000   \n",
       "50%       6.830000     9.210000     8.080000     8.170000     8.290000   \n",
       "max      26.160000    30.370000    31.080000    25.880000    28.210000   \n",
       "\n",
       "               BEL          MAL  \n",
       "count  6574.000000  6570.000000  \n",
       "mean     13.121007    15.599079  \n",
       "std       5.835037     6.699794  \n",
       "min       0.130000     0.670000  \n",
       "50%      12.500000    15.000000  \n",
       "max      42.380000    42.540000  "
      ]
     },
     "execution_count": 38,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "loc_stats"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "038a8672",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RPT    14.847325\n",
       "VAL    12.914560\n",
       "ROS    13.299624\n",
       "KIL     7.199498\n",
       "SHA    11.667734\n",
       "BIR     8.054839\n",
       "DUB    11.819355\n",
       "CLA     9.512047\n",
       "MUL     9.543208\n",
       "CLO    10.053566\n",
       "BEL    14.550520\n",
       "MAL    18.028763\n",
       "dtype: float64"
      ]
     },
     "execution_count": 39,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.loc[data.index.month == 1].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "534a288c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1961-01-01</th>\n",
       "      <td>9.29</td>\n",
       "      <td>18.50</td>\n",
       "      <td>13.018182</td>\n",
       "      <td>2.808875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-02</th>\n",
       "      <td>6.50</td>\n",
       "      <td>17.54</td>\n",
       "      <td>11.336364</td>\n",
       "      <td>3.188994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-03</th>\n",
       "      <td>6.17</td>\n",
       "      <td>18.50</td>\n",
       "      <td>11.641818</td>\n",
       "      <td>3.681912</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-04</th>\n",
       "      <td>1.79</td>\n",
       "      <td>11.75</td>\n",
       "      <td>6.619167</td>\n",
       "      <td>3.198126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-05</th>\n",
       "      <td>6.17</td>\n",
       "      <td>13.33</td>\n",
       "      <td>10.630000</td>\n",
       "      <td>2.445356</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "             min    max       mean       std\n",
       "Yr_Mo_Dy                                    \n",
       "1961-01-01  9.29  18.50  13.018182  2.808875\n",
       "1961-01-02  6.50  17.54  11.336364  3.188994\n",
       "1961-01-03  6.17  18.50  11.641818  3.681912\n",
       "1961-01-04  1.79  11.75   6.619167  3.198126\n",
       "1961-01-05  6.17  13.33  10.630000  2.445356"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# creating dataframe\n",
    "day_stats = pd.DataFrame()\n",
    "\n",
    "\n",
    "day_stats['min'] = data.min(axis = 1) \n",
    "day_stats['max'] = data.max(axis = 1) \n",
    "day_stats['mean'] = data.mean(axis = 1) \n",
    "day_stats['std'] = data.std(axis = 1) \n",
    "\n",
    "day_stats.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "3d13317f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RPT    14.847325\n",
       "VAL    12.914560\n",
       "ROS    13.299624\n",
       "KIL     7.199498\n",
       "SHA    11.667734\n",
       "BIR     8.054839\n",
       "DUB    11.819355\n",
       "CLA     9.512047\n",
       "MUL     9.543208\n",
       "CLO    10.053566\n",
       "BEL    14.550520\n",
       "MAL    18.028763\n",
       "dtype: float64"
      ]
     },
     "execution_count": 41,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data.loc[data.index.month == 1].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "c8269602",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1961</th>\n",
       "      <td>12.299583</td>\n",
       "      <td>10.351796</td>\n",
       "      <td>11.362369</td>\n",
       "      <td>6.958227</td>\n",
       "      <td>10.881763</td>\n",
       "      <td>7.729726</td>\n",
       "      <td>9.733923</td>\n",
       "      <td>8.858788</td>\n",
       "      <td>8.647652</td>\n",
       "      <td>9.835577</td>\n",
       "      <td>13.502795</td>\n",
       "      <td>13.680773</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1962</th>\n",
       "      <td>12.246923</td>\n",
       "      <td>10.110438</td>\n",
       "      <td>11.732712</td>\n",
       "      <td>6.960440</td>\n",
       "      <td>10.657918</td>\n",
       "      <td>7.393068</td>\n",
       "      <td>11.020712</td>\n",
       "      <td>8.793753</td>\n",
       "      <td>8.316822</td>\n",
       "      <td>9.676247</td>\n",
       "      <td>12.930685</td>\n",
       "      <td>14.323956</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1963</th>\n",
       "      <td>12.813452</td>\n",
       "      <td>10.836986</td>\n",
       "      <td>12.541151</td>\n",
       "      <td>7.330055</td>\n",
       "      <td>11.724110</td>\n",
       "      <td>8.434712</td>\n",
       "      <td>11.075699</td>\n",
       "      <td>10.336548</td>\n",
       "      <td>8.903589</td>\n",
       "      <td>10.224438</td>\n",
       "      <td>13.638877</td>\n",
       "      <td>14.999014</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1964</th>\n",
       "      <td>12.363661</td>\n",
       "      <td>10.920164</td>\n",
       "      <td>12.104372</td>\n",
       "      <td>6.787787</td>\n",
       "      <td>11.454481</td>\n",
       "      <td>7.570874</td>\n",
       "      <td>10.259153</td>\n",
       "      <td>9.467350</td>\n",
       "      <td>7.789016</td>\n",
       "      <td>10.207951</td>\n",
       "      <td>13.740546</td>\n",
       "      <td>14.910301</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1965</th>\n",
       "      <td>12.451370</td>\n",
       "      <td>11.075534</td>\n",
       "      <td>11.848767</td>\n",
       "      <td>6.858466</td>\n",
       "      <td>11.024795</td>\n",
       "      <td>7.478110</td>\n",
       "      <td>10.618712</td>\n",
       "      <td>8.879918</td>\n",
       "      <td>7.907425</td>\n",
       "      <td>9.918082</td>\n",
       "      <td>12.964247</td>\n",
       "      <td>15.591644</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1966</th>\n",
       "      <td>13.461973</td>\n",
       "      <td>11.557205</td>\n",
       "      <td>12.020630</td>\n",
       "      <td>7.345726</td>\n",
       "      <td>11.805041</td>\n",
       "      <td>7.793671</td>\n",
       "      <td>10.579808</td>\n",
       "      <td>8.835096</td>\n",
       "      <td>8.514438</td>\n",
       "      <td>9.768959</td>\n",
       "      <td>14.265836</td>\n",
       "      <td>16.307260</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1967</th>\n",
       "      <td>12.737151</td>\n",
       "      <td>10.990986</td>\n",
       "      <td>11.739397</td>\n",
       "      <td>7.143425</td>\n",
       "      <td>11.630740</td>\n",
       "      <td>7.368164</td>\n",
       "      <td>10.652027</td>\n",
       "      <td>9.325616</td>\n",
       "      <td>8.645014</td>\n",
       "      <td>9.547425</td>\n",
       "      <td>14.774548</td>\n",
       "      <td>17.135945</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1968</th>\n",
       "      <td>11.835628</td>\n",
       "      <td>10.468197</td>\n",
       "      <td>11.409754</td>\n",
       "      <td>6.477678</td>\n",
       "      <td>10.760765</td>\n",
       "      <td>6.067322</td>\n",
       "      <td>8.859180</td>\n",
       "      <td>8.255519</td>\n",
       "      <td>7.224945</td>\n",
       "      <td>7.832978</td>\n",
       "      <td>12.808634</td>\n",
       "      <td>15.017486</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1969</th>\n",
       "      <td>11.166356</td>\n",
       "      <td>9.723699</td>\n",
       "      <td>10.902000</td>\n",
       "      <td>5.767973</td>\n",
       "      <td>9.873918</td>\n",
       "      <td>6.189973</td>\n",
       "      <td>8.564493</td>\n",
       "      <td>7.711397</td>\n",
       "      <td>7.924521</td>\n",
       "      <td>7.754384</td>\n",
       "      <td>12.621233</td>\n",
       "      <td>15.762904</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1970</th>\n",
       "      <td>12.600329</td>\n",
       "      <td>10.726932</td>\n",
       "      <td>11.730247</td>\n",
       "      <td>6.217178</td>\n",
       "      <td>10.567370</td>\n",
       "      <td>7.609452</td>\n",
       "      <td>9.609890</td>\n",
       "      <td>8.334630</td>\n",
       "      <td>9.297616</td>\n",
       "      <td>8.289808</td>\n",
       "      <td>13.183644</td>\n",
       "      <td>16.456027</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1971</th>\n",
       "      <td>11.273123</td>\n",
       "      <td>9.095178</td>\n",
       "      <td>11.088329</td>\n",
       "      <td>5.241507</td>\n",
       "      <td>9.440329</td>\n",
       "      <td>6.097151</td>\n",
       "      <td>8.385890</td>\n",
       "      <td>6.757315</td>\n",
       "      <td>7.915370</td>\n",
       "      <td>7.229753</td>\n",
       "      <td>12.208932</td>\n",
       "      <td>15.025233</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1972</th>\n",
       "      <td>12.463962</td>\n",
       "      <td>10.561311</td>\n",
       "      <td>12.058333</td>\n",
       "      <td>5.929699</td>\n",
       "      <td>9.430410</td>\n",
       "      <td>6.358825</td>\n",
       "      <td>9.704508</td>\n",
       "      <td>7.680792</td>\n",
       "      <td>8.357295</td>\n",
       "      <td>7.515273</td>\n",
       "      <td>12.727377</td>\n",
       "      <td>15.028716</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1973</th>\n",
       "      <td>11.828466</td>\n",
       "      <td>10.680493</td>\n",
       "      <td>10.680493</td>\n",
       "      <td>5.547863</td>\n",
       "      <td>9.640877</td>\n",
       "      <td>6.548740</td>\n",
       "      <td>8.482110</td>\n",
       "      <td>7.614274</td>\n",
       "      <td>8.245534</td>\n",
       "      <td>7.812411</td>\n",
       "      <td>12.169699</td>\n",
       "      <td>15.441096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1974</th>\n",
       "      <td>13.643096</td>\n",
       "      <td>11.811781</td>\n",
       "      <td>12.336356</td>\n",
       "      <td>6.427041</td>\n",
       "      <td>11.110986</td>\n",
       "      <td>6.809781</td>\n",
       "      <td>10.084603</td>\n",
       "      <td>9.896986</td>\n",
       "      <td>9.331753</td>\n",
       "      <td>8.736356</td>\n",
       "      <td>13.252959</td>\n",
       "      <td>16.947671</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1975</th>\n",
       "      <td>12.008575</td>\n",
       "      <td>10.293836</td>\n",
       "      <td>11.564712</td>\n",
       "      <td>5.269096</td>\n",
       "      <td>9.190082</td>\n",
       "      <td>5.668521</td>\n",
       "      <td>8.562603</td>\n",
       "      <td>7.843836</td>\n",
       "      <td>8.797945</td>\n",
       "      <td>7.382822</td>\n",
       "      <td>12.631671</td>\n",
       "      <td>15.307863</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1976</th>\n",
       "      <td>11.737842</td>\n",
       "      <td>10.203115</td>\n",
       "      <td>10.761230</td>\n",
       "      <td>5.109426</td>\n",
       "      <td>8.846339</td>\n",
       "      <td>6.311038</td>\n",
       "      <td>9.149126</td>\n",
       "      <td>7.146202</td>\n",
       "      <td>8.883716</td>\n",
       "      <td>7.883087</td>\n",
       "      <td>12.332377</td>\n",
       "      <td>15.471448</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1977</th>\n",
       "      <td>13.099616</td>\n",
       "      <td>11.144493</td>\n",
       "      <td>12.627836</td>\n",
       "      <td>6.073945</td>\n",
       "      <td>10.003836</td>\n",
       "      <td>8.586438</td>\n",
       "      <td>11.523205</td>\n",
       "      <td>8.378384</td>\n",
       "      <td>9.098192</td>\n",
       "      <td>8.821616</td>\n",
       "      <td>13.459068</td>\n",
       "      <td>16.590849</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978</th>\n",
       "      <td>12.504356</td>\n",
       "      <td>11.044274</td>\n",
       "      <td>11.380000</td>\n",
       "      <td>6.082356</td>\n",
       "      <td>10.167233</td>\n",
       "      <td>7.650658</td>\n",
       "      <td>9.489342</td>\n",
       "      <td>8.800466</td>\n",
       "      <td>9.089753</td>\n",
       "      <td>8.301699</td>\n",
       "      <td>12.967397</td>\n",
       "      <td>16.771370</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                RPT        VAL        ROS       KIL        SHA       BIR  \\\n",
       "Yr_Mo_Dy                                                                   \n",
       "1961      12.299583  10.351796  11.362369  6.958227  10.881763  7.729726   \n",
       "1962      12.246923  10.110438  11.732712  6.960440  10.657918  7.393068   \n",
       "1963      12.813452  10.836986  12.541151  7.330055  11.724110  8.434712   \n",
       "1964      12.363661  10.920164  12.104372  6.787787  11.454481  7.570874   \n",
       "1965      12.451370  11.075534  11.848767  6.858466  11.024795  7.478110   \n",
       "1966      13.461973  11.557205  12.020630  7.345726  11.805041  7.793671   \n",
       "1967      12.737151  10.990986  11.739397  7.143425  11.630740  7.368164   \n",
       "1968      11.835628  10.468197  11.409754  6.477678  10.760765  6.067322   \n",
       "1969      11.166356   9.723699  10.902000  5.767973   9.873918  6.189973   \n",
       "1970      12.600329  10.726932  11.730247  6.217178  10.567370  7.609452   \n",
       "1971      11.273123   9.095178  11.088329  5.241507   9.440329  6.097151   \n",
       "1972      12.463962  10.561311  12.058333  5.929699   9.430410  6.358825   \n",
       "1973      11.828466  10.680493  10.680493  5.547863   9.640877  6.548740   \n",
       "1974      13.643096  11.811781  12.336356  6.427041  11.110986  6.809781   \n",
       "1975      12.008575  10.293836  11.564712  5.269096   9.190082  5.668521   \n",
       "1976      11.737842  10.203115  10.761230  5.109426   8.846339  6.311038   \n",
       "1977      13.099616  11.144493  12.627836  6.073945  10.003836  8.586438   \n",
       "1978      12.504356  11.044274  11.380000  6.082356  10.167233  7.650658   \n",
       "\n",
       "                DUB        CLA       MUL        CLO        BEL        MAL  \n",
       "Yr_Mo_Dy                                                                   \n",
       "1961       9.733923   8.858788  8.647652   9.835577  13.502795  13.680773  \n",
       "1962      11.020712   8.793753  8.316822   9.676247  12.930685  14.323956  \n",
       "1963      11.075699  10.336548  8.903589  10.224438  13.638877  14.999014  \n",
       "1964      10.259153   9.467350  7.789016  10.207951  13.740546  14.910301  \n",
       "1965      10.618712   8.879918  7.907425   9.918082  12.964247  15.591644  \n",
       "1966      10.579808   8.835096  8.514438   9.768959  14.265836  16.307260  \n",
       "1967      10.652027   9.325616  8.645014   9.547425  14.774548  17.135945  \n",
       "1968       8.859180   8.255519  7.224945   7.832978  12.808634  15.017486  \n",
       "1969       8.564493   7.711397  7.924521   7.754384  12.621233  15.762904  \n",
       "1970       9.609890   8.334630  9.297616   8.289808  13.183644  16.456027  \n",
       "1971       8.385890   6.757315  7.915370   7.229753  12.208932  15.025233  \n",
       "1972       9.704508   7.680792  8.357295   7.515273  12.727377  15.028716  \n",
       "1973       8.482110   7.614274  8.245534   7.812411  12.169699  15.441096  \n",
       "1974      10.084603   9.896986  9.331753   8.736356  13.252959  16.947671  \n",
       "1975       8.562603   7.843836  8.797945   7.382822  12.631671  15.307863  \n",
       "1976       9.149126   7.146202  8.883716   7.883087  12.332377  15.471448  \n",
       "1977      11.523205   8.378384  9.098192   8.821616  13.459068  16.590849  \n",
       "1978       9.489342   8.800466  9.089753   8.301699  12.967397  16.771370  "
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# downsampling the record to get yearly frequency\n",
    "data.groupby(data.index.to_period('A')).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "b8362746",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1961-01</th>\n",
       "      <td>14.841333</td>\n",
       "      <td>11.988333</td>\n",
       "      <td>13.431613</td>\n",
       "      <td>7.736774</td>\n",
       "      <td>11.072759</td>\n",
       "      <td>8.588065</td>\n",
       "      <td>11.184839</td>\n",
       "      <td>9.245333</td>\n",
       "      <td>9.085806</td>\n",
       "      <td>10.107419</td>\n",
       "      <td>13.880968</td>\n",
       "      <td>14.703226</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-02</th>\n",
       "      <td>16.269286</td>\n",
       "      <td>14.975357</td>\n",
       "      <td>14.441481</td>\n",
       "      <td>9.230741</td>\n",
       "      <td>13.852143</td>\n",
       "      <td>10.937500</td>\n",
       "      <td>11.890714</td>\n",
       "      <td>11.846071</td>\n",
       "      <td>11.821429</td>\n",
       "      <td>12.714286</td>\n",
       "      <td>18.583214</td>\n",
       "      <td>15.411786</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-03</th>\n",
       "      <td>10.890000</td>\n",
       "      <td>11.296452</td>\n",
       "      <td>10.752903</td>\n",
       "      <td>7.284000</td>\n",
       "      <td>10.509355</td>\n",
       "      <td>8.866774</td>\n",
       "      <td>9.644194</td>\n",
       "      <td>9.829677</td>\n",
       "      <td>10.294138</td>\n",
       "      <td>11.251935</td>\n",
       "      <td>16.410968</td>\n",
       "      <td>15.720000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-04</th>\n",
       "      <td>10.722667</td>\n",
       "      <td>9.427667</td>\n",
       "      <td>9.998000</td>\n",
       "      <td>5.830667</td>\n",
       "      <td>8.435000</td>\n",
       "      <td>6.495000</td>\n",
       "      <td>6.925333</td>\n",
       "      <td>7.094667</td>\n",
       "      <td>7.342333</td>\n",
       "      <td>7.237000</td>\n",
       "      <td>11.147333</td>\n",
       "      <td>10.278333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-05</th>\n",
       "      <td>9.860968</td>\n",
       "      <td>8.850000</td>\n",
       "      <td>10.818065</td>\n",
       "      <td>5.905333</td>\n",
       "      <td>9.490323</td>\n",
       "      <td>6.574839</td>\n",
       "      <td>7.604000</td>\n",
       "      <td>8.177097</td>\n",
       "      <td>8.039355</td>\n",
       "      <td>8.499355</td>\n",
       "      <td>11.900323</td>\n",
       "      <td>12.011613</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-08</th>\n",
       "      <td>9.645161</td>\n",
       "      <td>8.259355</td>\n",
       "      <td>9.032258</td>\n",
       "      <td>4.502903</td>\n",
       "      <td>7.368065</td>\n",
       "      <td>5.935161</td>\n",
       "      <td>5.650323</td>\n",
       "      <td>5.417742</td>\n",
       "      <td>7.241290</td>\n",
       "      <td>5.536774</td>\n",
       "      <td>10.466774</td>\n",
       "      <td>12.054194</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-09</th>\n",
       "      <td>10.913667</td>\n",
       "      <td>10.895000</td>\n",
       "      <td>10.635000</td>\n",
       "      <td>5.725000</td>\n",
       "      <td>10.372000</td>\n",
       "      <td>9.278333</td>\n",
       "      <td>10.790333</td>\n",
       "      <td>9.583000</td>\n",
       "      <td>10.069333</td>\n",
       "      <td>8.939000</td>\n",
       "      <td>15.680333</td>\n",
       "      <td>19.391333</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-10</th>\n",
       "      <td>9.897742</td>\n",
       "      <td>8.670968</td>\n",
       "      <td>9.295806</td>\n",
       "      <td>4.721290</td>\n",
       "      <td>8.525161</td>\n",
       "      <td>6.774194</td>\n",
       "      <td>8.115484</td>\n",
       "      <td>7.337742</td>\n",
       "      <td>8.297742</td>\n",
       "      <td>8.243871</td>\n",
       "      <td>13.776774</td>\n",
       "      <td>17.150000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-11</th>\n",
       "      <td>16.151667</td>\n",
       "      <td>14.802667</td>\n",
       "      <td>13.508000</td>\n",
       "      <td>7.317333</td>\n",
       "      <td>11.475000</td>\n",
       "      <td>8.743000</td>\n",
       "      <td>11.492333</td>\n",
       "      <td>9.657333</td>\n",
       "      <td>10.701333</td>\n",
       "      <td>10.676000</td>\n",
       "      <td>17.404667</td>\n",
       "      <td>20.723000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-12</th>\n",
       "      <td>16.175484</td>\n",
       "      <td>13.748065</td>\n",
       "      <td>15.635161</td>\n",
       "      <td>7.094839</td>\n",
       "      <td>11.398710</td>\n",
       "      <td>9.241613</td>\n",
       "      <td>12.077419</td>\n",
       "      <td>10.194839</td>\n",
       "      <td>10.616774</td>\n",
       "      <td>11.028710</td>\n",
       "      <td>13.859677</td>\n",
       "      <td>21.371613</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>216 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                RPT        VAL        ROS       KIL        SHA        BIR  \\\n",
       "Yr_Mo_Dy                                                                    \n",
       "1961-01   14.841333  11.988333  13.431613  7.736774  11.072759   8.588065   \n",
       "1961-02   16.269286  14.975357  14.441481  9.230741  13.852143  10.937500   \n",
       "1961-03   10.890000  11.296452  10.752903  7.284000  10.509355   8.866774   \n",
       "1961-04   10.722667   9.427667   9.998000  5.830667   8.435000   6.495000   \n",
       "1961-05    9.860968   8.850000  10.818065  5.905333   9.490323   6.574839   \n",
       "...             ...        ...        ...       ...        ...        ...   \n",
       "1978-08    9.645161   8.259355   9.032258  4.502903   7.368065   5.935161   \n",
       "1978-09   10.913667  10.895000  10.635000  5.725000  10.372000   9.278333   \n",
       "1978-10    9.897742   8.670968   9.295806  4.721290   8.525161   6.774194   \n",
       "1978-11   16.151667  14.802667  13.508000  7.317333  11.475000   8.743000   \n",
       "1978-12   16.175484  13.748065  15.635161  7.094839  11.398710   9.241613   \n",
       "\n",
       "                DUB        CLA        MUL        CLO        BEL        MAL  \n",
       "Yr_Mo_Dy                                                                    \n",
       "1961-01   11.184839   9.245333   9.085806  10.107419  13.880968  14.703226  \n",
       "1961-02   11.890714  11.846071  11.821429  12.714286  18.583214  15.411786  \n",
       "1961-03    9.644194   9.829677  10.294138  11.251935  16.410968  15.720000  \n",
       "1961-04    6.925333   7.094667   7.342333   7.237000  11.147333  10.278333  \n",
       "1961-05    7.604000   8.177097   8.039355   8.499355  11.900323  12.011613  \n",
       "...             ...        ...        ...        ...        ...        ...  \n",
       "1978-08    5.650323   5.417742   7.241290   5.536774  10.466774  12.054194  \n",
       "1978-09   10.790333   9.583000  10.069333   8.939000  15.680333  19.391333  \n",
       "1978-10    8.115484   7.337742   8.297742   8.243871  13.776774  17.150000  \n",
       "1978-11   11.492333   9.657333  10.701333  10.676000  17.404667  20.723000  \n",
       "1978-12   12.077419  10.194839  10.616774  11.028710  13.859677  21.371613  \n",
       "\n",
       "[216 rows x 12 columns]"
      ]
     },
     "execution_count": 43,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# downsampling the record to get monthly frequency\n",
    "data.groupby(data.index.to_period('M')).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "7c500101",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>RPT</th>\n",
       "      <th>VAL</th>\n",
       "      <th>ROS</th>\n",
       "      <th>KIL</th>\n",
       "      <th>SHA</th>\n",
       "      <th>BIR</th>\n",
       "      <th>DUB</th>\n",
       "      <th>CLA</th>\n",
       "      <th>MUL</th>\n",
       "      <th>CLO</th>\n",
       "      <th>BEL</th>\n",
       "      <th>MAL</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1960-12-26/1961-01-01</th>\n",
       "      <td>15.040000</td>\n",
       "      <td>14.960000</td>\n",
       "      <td>13.170000</td>\n",
       "      <td>9.290000</td>\n",
       "      <td>NaN</td>\n",
       "      <td>9.870000</td>\n",
       "      <td>13.670000</td>\n",
       "      <td>10.250000</td>\n",
       "      <td>10.830000</td>\n",
       "      <td>12.580000</td>\n",
       "      <td>18.500000</td>\n",
       "      <td>15.040000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-02/1961-01-08</th>\n",
       "      <td>13.541429</td>\n",
       "      <td>11.486667</td>\n",
       "      <td>10.487143</td>\n",
       "      <td>6.417143</td>\n",
       "      <td>9.474286</td>\n",
       "      <td>6.435714</td>\n",
       "      <td>11.061429</td>\n",
       "      <td>6.616667</td>\n",
       "      <td>8.434286</td>\n",
       "      <td>8.497143</td>\n",
       "      <td>12.481429</td>\n",
       "      <td>13.238571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-09/1961-01-15</th>\n",
       "      <td>12.468571</td>\n",
       "      <td>8.967143</td>\n",
       "      <td>11.958571</td>\n",
       "      <td>4.630000</td>\n",
       "      <td>7.351429</td>\n",
       "      <td>5.072857</td>\n",
       "      <td>7.535714</td>\n",
       "      <td>6.820000</td>\n",
       "      <td>5.712857</td>\n",
       "      <td>7.571429</td>\n",
       "      <td>11.125714</td>\n",
       "      <td>11.024286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-16/1961-01-22</th>\n",
       "      <td>13.204286</td>\n",
       "      <td>9.862857</td>\n",
       "      <td>12.982857</td>\n",
       "      <td>6.328571</td>\n",
       "      <td>8.966667</td>\n",
       "      <td>7.417143</td>\n",
       "      <td>9.257143</td>\n",
       "      <td>7.875714</td>\n",
       "      <td>7.145714</td>\n",
       "      <td>8.124286</td>\n",
       "      <td>9.821429</td>\n",
       "      <td>11.434286</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-23/1961-01-29</th>\n",
       "      <td>19.880000</td>\n",
       "      <td>16.141429</td>\n",
       "      <td>18.225714</td>\n",
       "      <td>12.720000</td>\n",
       "      <td>17.432857</td>\n",
       "      <td>14.828571</td>\n",
       "      <td>15.528571</td>\n",
       "      <td>15.160000</td>\n",
       "      <td>14.480000</td>\n",
       "      <td>15.640000</td>\n",
       "      <td>20.930000</td>\n",
       "      <td>22.530000</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-11-27/1978-12-03</th>\n",
       "      <td>14.934286</td>\n",
       "      <td>11.232857</td>\n",
       "      <td>13.941429</td>\n",
       "      <td>5.565714</td>\n",
       "      <td>10.215714</td>\n",
       "      <td>8.618571</td>\n",
       "      <td>9.642857</td>\n",
       "      <td>7.685714</td>\n",
       "      <td>9.011429</td>\n",
       "      <td>9.547143</td>\n",
       "      <td>11.835714</td>\n",
       "      <td>18.728571</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-12-04/1978-12-10</th>\n",
       "      <td>20.740000</td>\n",
       "      <td>19.190000</td>\n",
       "      <td>17.034286</td>\n",
       "      <td>9.777143</td>\n",
       "      <td>15.287143</td>\n",
       "      <td>12.774286</td>\n",
       "      <td>14.437143</td>\n",
       "      <td>12.488571</td>\n",
       "      <td>13.870000</td>\n",
       "      <td>14.082857</td>\n",
       "      <td>18.517143</td>\n",
       "      <td>23.061429</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-12-11/1978-12-17</th>\n",
       "      <td>16.758571</td>\n",
       "      <td>14.692857</td>\n",
       "      <td>14.987143</td>\n",
       "      <td>6.917143</td>\n",
       "      <td>11.397143</td>\n",
       "      <td>7.272857</td>\n",
       "      <td>10.208571</td>\n",
       "      <td>7.967143</td>\n",
       "      <td>9.168571</td>\n",
       "      <td>8.565714</td>\n",
       "      <td>11.102857</td>\n",
       "      <td>15.562857</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-12-18/1978-12-24</th>\n",
       "      <td>11.155714</td>\n",
       "      <td>8.008571</td>\n",
       "      <td>13.172857</td>\n",
       "      <td>4.004286</td>\n",
       "      <td>7.825714</td>\n",
       "      <td>6.290000</td>\n",
       "      <td>7.798571</td>\n",
       "      <td>8.667143</td>\n",
       "      <td>7.151429</td>\n",
       "      <td>8.072857</td>\n",
       "      <td>11.845714</td>\n",
       "      <td>18.977143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1978-12-25/1978-12-31</th>\n",
       "      <td>14.951429</td>\n",
       "      <td>11.801429</td>\n",
       "      <td>16.035714</td>\n",
       "      <td>6.507143</td>\n",
       "      <td>9.660000</td>\n",
       "      <td>8.620000</td>\n",
       "      <td>13.708571</td>\n",
       "      <td>10.477143</td>\n",
       "      <td>10.868571</td>\n",
       "      <td>11.471429</td>\n",
       "      <td>12.947143</td>\n",
       "      <td>26.844286</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>940 rows Ã— 12 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                             RPT        VAL        ROS        KIL        SHA  \\\n",
       "Yr_Mo_Dy                                                                       \n",
       "1960-12-26/1961-01-01  15.040000  14.960000  13.170000   9.290000        NaN   \n",
       "1961-01-02/1961-01-08  13.541429  11.486667  10.487143   6.417143   9.474286   \n",
       "1961-01-09/1961-01-15  12.468571   8.967143  11.958571   4.630000   7.351429   \n",
       "1961-01-16/1961-01-22  13.204286   9.862857  12.982857   6.328571   8.966667   \n",
       "1961-01-23/1961-01-29  19.880000  16.141429  18.225714  12.720000  17.432857   \n",
       "...                          ...        ...        ...        ...        ...   \n",
       "1978-11-27/1978-12-03  14.934286  11.232857  13.941429   5.565714  10.215714   \n",
       "1978-12-04/1978-12-10  20.740000  19.190000  17.034286   9.777143  15.287143   \n",
       "1978-12-11/1978-12-17  16.758571  14.692857  14.987143   6.917143  11.397143   \n",
       "1978-12-18/1978-12-24  11.155714   8.008571  13.172857   4.004286   7.825714   \n",
       "1978-12-25/1978-12-31  14.951429  11.801429  16.035714   6.507143   9.660000   \n",
       "\n",
       "                             BIR        DUB        CLA        MUL        CLO  \\\n",
       "Yr_Mo_Dy                                                                       \n",
       "1960-12-26/1961-01-01   9.870000  13.670000  10.250000  10.830000  12.580000   \n",
       "1961-01-02/1961-01-08   6.435714  11.061429   6.616667   8.434286   8.497143   \n",
       "1961-01-09/1961-01-15   5.072857   7.535714   6.820000   5.712857   7.571429   \n",
       "1961-01-16/1961-01-22   7.417143   9.257143   7.875714   7.145714   8.124286   \n",
       "1961-01-23/1961-01-29  14.828571  15.528571  15.160000  14.480000  15.640000   \n",
       "...                          ...        ...        ...        ...        ...   \n",
       "1978-11-27/1978-12-03   8.618571   9.642857   7.685714   9.011429   9.547143   \n",
       "1978-12-04/1978-12-10  12.774286  14.437143  12.488571  13.870000  14.082857   \n",
       "1978-12-11/1978-12-17   7.272857  10.208571   7.967143   9.168571   8.565714   \n",
       "1978-12-18/1978-12-24   6.290000   7.798571   8.667143   7.151429   8.072857   \n",
       "1978-12-25/1978-12-31   8.620000  13.708571  10.477143  10.868571  11.471429   \n",
       "\n",
       "                             BEL        MAL  \n",
       "Yr_Mo_Dy                                     \n",
       "1960-12-26/1961-01-01  18.500000  15.040000  \n",
       "1961-01-02/1961-01-08  12.481429  13.238571  \n",
       "1961-01-09/1961-01-15  11.125714  11.024286  \n",
       "1961-01-16/1961-01-22   9.821429  11.434286  \n",
       "1961-01-23/1961-01-29  20.930000  22.530000  \n",
       "...                          ...        ...  \n",
       "1978-11-27/1978-12-03  11.835714  18.728571  \n",
       "1978-12-04/1978-12-10  18.517143  23.061429  \n",
       "1978-12-11/1978-12-17  11.102857  15.562857  \n",
       "1978-12-18/1978-12-24  11.845714  18.977143  \n",
       "1978-12-25/1978-12-31  12.947143  26.844286  \n",
       "\n",
       "[940 rows x 12 columns]"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# downsampling the record to get weekly frequency\n",
    "data.groupby(data.index.to_period('W')).mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "f5bc391e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr th {\n",
       "        text-align: left;\n",
       "    }\n",
       "\n",
       "    .dataframe thead tr:last-of-type th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th colspan=\"4\" halign=\"left\">RPT</th>\n",
       "      <th colspan=\"4\" halign=\"left\">VAL</th>\n",
       "      <th colspan=\"2\" halign=\"left\">ROS</th>\n",
       "      <th>...</th>\n",
       "      <th colspan=\"2\" halign=\"left\">CLO</th>\n",
       "      <th colspan=\"4\" halign=\"left\">BEL</th>\n",
       "      <th colspan=\"4\" halign=\"left\">MAL</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th></th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>...</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "      <th>min</th>\n",
       "      <th>max</th>\n",
       "      <th>mean</th>\n",
       "      <th>std</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Yr_Mo_Dy</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>1961-01-08</th>\n",
       "      <td>10.58</td>\n",
       "      <td>18.50</td>\n",
       "      <td>13.541429</td>\n",
       "      <td>2.631321</td>\n",
       "      <td>6.63</td>\n",
       "      <td>16.88</td>\n",
       "      <td>11.486667</td>\n",
       "      <td>3.949525</td>\n",
       "      <td>7.62</td>\n",
       "      <td>12.33</td>\n",
       "      <td>...</td>\n",
       "      <td>8.497143</td>\n",
       "      <td>1.704941</td>\n",
       "      <td>5.46</td>\n",
       "      <td>17.54</td>\n",
       "      <td>12.481429</td>\n",
       "      <td>4.349139</td>\n",
       "      <td>10.88</td>\n",
       "      <td>16.46</td>\n",
       "      <td>13.238571</td>\n",
       "      <td>1.773062</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-15</th>\n",
       "      <td>9.04</td>\n",
       "      <td>19.75</td>\n",
       "      <td>12.468571</td>\n",
       "      <td>3.555392</td>\n",
       "      <td>3.54</td>\n",
       "      <td>12.08</td>\n",
       "      <td>8.967143</td>\n",
       "      <td>3.148945</td>\n",
       "      <td>7.08</td>\n",
       "      <td>19.50</td>\n",
       "      <td>...</td>\n",
       "      <td>7.571429</td>\n",
       "      <td>4.084293</td>\n",
       "      <td>5.25</td>\n",
       "      <td>20.71</td>\n",
       "      <td>11.125714</td>\n",
       "      <td>5.552215</td>\n",
       "      <td>5.17</td>\n",
       "      <td>16.92</td>\n",
       "      <td>11.024286</td>\n",
       "      <td>4.692355</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-22</th>\n",
       "      <td>4.92</td>\n",
       "      <td>19.83</td>\n",
       "      <td>13.204286</td>\n",
       "      <td>5.337402</td>\n",
       "      <td>3.42</td>\n",
       "      <td>14.37</td>\n",
       "      <td>9.862857</td>\n",
       "      <td>3.837785</td>\n",
       "      <td>7.29</td>\n",
       "      <td>20.79</td>\n",
       "      <td>...</td>\n",
       "      <td>8.124286</td>\n",
       "      <td>4.783952</td>\n",
       "      <td>6.50</td>\n",
       "      <td>15.92</td>\n",
       "      <td>9.821429</td>\n",
       "      <td>3.626584</td>\n",
       "      <td>6.79</td>\n",
       "      <td>17.96</td>\n",
       "      <td>11.434286</td>\n",
       "      <td>4.237239</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-01-29</th>\n",
       "      <td>13.62</td>\n",
       "      <td>25.04</td>\n",
       "      <td>19.880000</td>\n",
       "      <td>4.619061</td>\n",
       "      <td>9.96</td>\n",
       "      <td>23.91</td>\n",
       "      <td>16.141429</td>\n",
       "      <td>5.170224</td>\n",
       "      <td>12.67</td>\n",
       "      <td>25.84</td>\n",
       "      <td>...</td>\n",
       "      <td>15.640000</td>\n",
       "      <td>3.713368</td>\n",
       "      <td>14.04</td>\n",
       "      <td>27.71</td>\n",
       "      <td>20.930000</td>\n",
       "      <td>5.210726</td>\n",
       "      <td>17.50</td>\n",
       "      <td>27.63</td>\n",
       "      <td>22.530000</td>\n",
       "      <td>3.874721</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-02-05</th>\n",
       "      <td>10.58</td>\n",
       "      <td>24.21</td>\n",
       "      <td>16.827143</td>\n",
       "      <td>5.251408</td>\n",
       "      <td>9.46</td>\n",
       "      <td>24.21</td>\n",
       "      <td>15.460000</td>\n",
       "      <td>5.187395</td>\n",
       "      <td>9.04</td>\n",
       "      <td>19.70</td>\n",
       "      <td>...</td>\n",
       "      <td>9.460000</td>\n",
       "      <td>2.839501</td>\n",
       "      <td>9.17</td>\n",
       "      <td>19.33</td>\n",
       "      <td>14.012857</td>\n",
       "      <td>4.210858</td>\n",
       "      <td>7.17</td>\n",
       "      <td>19.25</td>\n",
       "      <td>11.935714</td>\n",
       "      <td>4.336104</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-02-12</th>\n",
       "      <td>16.00</td>\n",
       "      <td>24.54</td>\n",
       "      <td>19.684286</td>\n",
       "      <td>3.587677</td>\n",
       "      <td>11.54</td>\n",
       "      <td>21.42</td>\n",
       "      <td>16.417143</td>\n",
       "      <td>3.608373</td>\n",
       "      <td>13.67</td>\n",
       "      <td>21.34</td>\n",
       "      <td>...</td>\n",
       "      <td>14.440000</td>\n",
       "      <td>1.746749</td>\n",
       "      <td>15.21</td>\n",
       "      <td>26.38</td>\n",
       "      <td>21.832857</td>\n",
       "      <td>4.063753</td>\n",
       "      <td>17.04</td>\n",
       "      <td>21.84</td>\n",
       "      <td>19.155714</td>\n",
       "      <td>1.828705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-02-19</th>\n",
       "      <td>6.04</td>\n",
       "      <td>22.50</td>\n",
       "      <td>15.130000</td>\n",
       "      <td>5.064609</td>\n",
       "      <td>11.63</td>\n",
       "      <td>20.17</td>\n",
       "      <td>15.091429</td>\n",
       "      <td>3.575012</td>\n",
       "      <td>6.13</td>\n",
       "      <td>19.41</td>\n",
       "      <td>...</td>\n",
       "      <td>13.542857</td>\n",
       "      <td>2.531361</td>\n",
       "      <td>14.09</td>\n",
       "      <td>29.63</td>\n",
       "      <td>21.167143</td>\n",
       "      <td>5.910938</td>\n",
       "      <td>10.96</td>\n",
       "      <td>22.58</td>\n",
       "      <td>16.584286</td>\n",
       "      <td>4.685377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-02-26</th>\n",
       "      <td>7.79</td>\n",
       "      <td>25.80</td>\n",
       "      <td>15.221429</td>\n",
       "      <td>7.020716</td>\n",
       "      <td>7.08</td>\n",
       "      <td>21.50</td>\n",
       "      <td>13.625714</td>\n",
       "      <td>5.147348</td>\n",
       "      <td>6.08</td>\n",
       "      <td>22.42</td>\n",
       "      <td>...</td>\n",
       "      <td>12.730000</td>\n",
       "      <td>4.920064</td>\n",
       "      <td>9.59</td>\n",
       "      <td>23.21</td>\n",
       "      <td>16.304286</td>\n",
       "      <td>5.091162</td>\n",
       "      <td>6.67</td>\n",
       "      <td>23.87</td>\n",
       "      <td>14.322857</td>\n",
       "      <td>6.182283</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-03-05</th>\n",
       "      <td>10.96</td>\n",
       "      <td>13.33</td>\n",
       "      <td>12.101429</td>\n",
       "      <td>0.997721</td>\n",
       "      <td>8.83</td>\n",
       "      <td>17.00</td>\n",
       "      <td>12.951429</td>\n",
       "      <td>2.851955</td>\n",
       "      <td>8.17</td>\n",
       "      <td>13.67</td>\n",
       "      <td>...</td>\n",
       "      <td>12.370000</td>\n",
       "      <td>1.593685</td>\n",
       "      <td>11.58</td>\n",
       "      <td>23.45</td>\n",
       "      <td>17.842857</td>\n",
       "      <td>4.332331</td>\n",
       "      <td>8.83</td>\n",
       "      <td>17.54</td>\n",
       "      <td>13.951667</td>\n",
       "      <td>3.021387</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-03-12</th>\n",
       "      <td>4.88</td>\n",
       "      <td>14.79</td>\n",
       "      <td>9.376667</td>\n",
       "      <td>3.732263</td>\n",
       "      <td>8.08</td>\n",
       "      <td>16.96</td>\n",
       "      <td>11.578571</td>\n",
       "      <td>3.230167</td>\n",
       "      <td>7.54</td>\n",
       "      <td>16.38</td>\n",
       "      <td>...</td>\n",
       "      <td>10.458571</td>\n",
       "      <td>3.655113</td>\n",
       "      <td>10.21</td>\n",
       "      <td>22.71</td>\n",
       "      <td>16.701429</td>\n",
       "      <td>4.358759</td>\n",
       "      <td>5.54</td>\n",
       "      <td>22.54</td>\n",
       "      <td>14.420000</td>\n",
       "      <td>5.769890</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-03-19</th>\n",
       "      <td>4.92</td>\n",
       "      <td>16.88</td>\n",
       "      <td>11.911429</td>\n",
       "      <td>3.860036</td>\n",
       "      <td>9.46</td>\n",
       "      <td>15.54</td>\n",
       "      <td>13.501429</td>\n",
       "      <td>2.352867</td>\n",
       "      <td>5.25</td>\n",
       "      <td>13.96</td>\n",
       "      <td>...</td>\n",
       "      <td>11.627143</td>\n",
       "      <td>3.099472</td>\n",
       "      <td>11.29</td>\n",
       "      <td>22.79</td>\n",
       "      <td>19.350000</td>\n",
       "      <td>3.779727</td>\n",
       "      <td>11.34</td>\n",
       "      <td>22.95</td>\n",
       "      <td>16.227143</td>\n",
       "      <td>4.331958</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-03-26</th>\n",
       "      <td>6.29</td>\n",
       "      <td>15.00</td>\n",
       "      <td>9.567143</td>\n",
       "      <td>3.613298</td>\n",
       "      <td>2.58</td>\n",
       "      <td>11.63</td>\n",
       "      <td>8.387143</td>\n",
       "      <td>3.657265</td>\n",
       "      <td>4.79</td>\n",
       "      <td>15.63</td>\n",
       "      <td>...</td>\n",
       "      <td>11.481429</td>\n",
       "      <td>2.538224</td>\n",
       "      <td>8.25</td>\n",
       "      <td>21.34</td>\n",
       "      <td>14.037143</td>\n",
       "      <td>4.318069</td>\n",
       "      <td>13.13</td>\n",
       "      <td>22.50</td>\n",
       "      <td>18.134286</td>\n",
       "      <td>3.701846</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-04-02</th>\n",
       "      <td>5.88</td>\n",
       "      <td>18.25</td>\n",
       "      <td>10.757143</td>\n",
       "      <td>5.046922</td>\n",
       "      <td>3.50</td>\n",
       "      <td>16.29</td>\n",
       "      <td>8.852857</td>\n",
       "      <td>4.687315</td>\n",
       "      <td>5.09</td>\n",
       "      <td>14.96</td>\n",
       "      <td>...</td>\n",
       "      <td>9.631429</td>\n",
       "      <td>3.191115</td>\n",
       "      <td>7.21</td>\n",
       "      <td>18.63</td>\n",
       "      <td>13.471429</td>\n",
       "      <td>4.179854</td>\n",
       "      <td>7.17</td>\n",
       "      <td>19.58</td>\n",
       "      <td>13.900000</td>\n",
       "      <td>3.924555</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-04-09</th>\n",
       "      <td>4.50</td>\n",
       "      <td>18.12</td>\n",
       "      <td>11.964286</td>\n",
       "      <td>4.604392</td>\n",
       "      <td>7.04</td>\n",
       "      <td>14.62</td>\n",
       "      <td>10.654286</td>\n",
       "      <td>2.845399</td>\n",
       "      <td>9.29</td>\n",
       "      <td>18.29</td>\n",
       "      <td>...</td>\n",
       "      <td>7.238571</td>\n",
       "      <td>2.336182</td>\n",
       "      <td>7.62</td>\n",
       "      <td>17.16</td>\n",
       "      <td>11.712857</td>\n",
       "      <td>3.147781</td>\n",
       "      <td>7.21</td>\n",
       "      <td>15.34</td>\n",
       "      <td>11.371429</td>\n",
       "      <td>2.598271</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-04-16</th>\n",
       "      <td>4.71</td>\n",
       "      <td>15.50</td>\n",
       "      <td>8.965714</td>\n",
       "      <td>3.937727</td>\n",
       "      <td>4.83</td>\n",
       "      <td>12.25</td>\n",
       "      <td>8.000000</td>\n",
       "      <td>2.607118</td>\n",
       "      <td>3.92</td>\n",
       "      <td>15.79</td>\n",
       "      <td>...</td>\n",
       "      <td>6.178571</td>\n",
       "      <td>2.161137</td>\n",
       "      <td>5.75</td>\n",
       "      <td>16.17</td>\n",
       "      <td>9.482857</td>\n",
       "      <td>3.641464</td>\n",
       "      <td>5.66</td>\n",
       "      <td>12.87</td>\n",
       "      <td>8.690000</td>\n",
       "      <td>2.747842</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-04-23</th>\n",
       "      <td>4.00</td>\n",
       "      <td>21.09</td>\n",
       "      <td>12.621429</td>\n",
       "      <td>5.676655</td>\n",
       "      <td>3.71</td>\n",
       "      <td>15.41</td>\n",
       "      <td>10.438571</td>\n",
       "      <td>4.631736</td>\n",
       "      <td>3.33</td>\n",
       "      <td>17.00</td>\n",
       "      <td>...</td>\n",
       "      <td>9.551429</td>\n",
       "      <td>3.347972</td>\n",
       "      <td>6.75</td>\n",
       "      <td>19.21</td>\n",
       "      <td>13.620000</td>\n",
       "      <td>4.735096</td>\n",
       "      <td>4.96</td>\n",
       "      <td>20.46</td>\n",
       "      <td>12.470000</td>\n",
       "      <td>5.908542</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-04-30</th>\n",
       "      <td>4.08</td>\n",
       "      <td>16.29</td>\n",
       "      <td>10.117143</td>\n",
       "      <td>4.349662</td>\n",
       "      <td>6.50</td>\n",
       "      <td>14.46</td>\n",
       "      <td>9.798571</td>\n",
       "      <td>2.871425</td>\n",
       "      <td>2.54</td>\n",
       "      <td>14.96</td>\n",
       "      <td>...</td>\n",
       "      <td>6.124286</td>\n",
       "      <td>2.840568</td>\n",
       "      <td>5.13</td>\n",
       "      <td>13.04</td>\n",
       "      <td>9.720000</td>\n",
       "      <td>2.948237</td>\n",
       "      <td>2.67</td>\n",
       "      <td>17.50</td>\n",
       "      <td>8.637143</td>\n",
       "      <td>5.108365</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-05-07</th>\n",
       "      <td>9.87</td>\n",
       "      <td>23.00</td>\n",
       "      <td>15.367143</td>\n",
       "      <td>5.025507</td>\n",
       "      <td>10.29</td>\n",
       "      <td>19.79</td>\n",
       "      <td>13.970000</td>\n",
       "      <td>3.750835</td>\n",
       "      <td>8.42</td>\n",
       "      <td>21.21</td>\n",
       "      <td>...</td>\n",
       "      <td>11.585714</td>\n",
       "      <td>3.620819</td>\n",
       "      <td>4.79</td>\n",
       "      <td>28.08</td>\n",
       "      <td>17.548571</td>\n",
       "      <td>8.003490</td>\n",
       "      <td>3.83</td>\n",
       "      <td>26.58</td>\n",
       "      <td>14.571429</td>\n",
       "      <td>7.728504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-05-14</th>\n",
       "      <td>3.54</td>\n",
       "      <td>12.79</td>\n",
       "      <td>7.772857</td>\n",
       "      <td>3.371022</td>\n",
       "      <td>3.96</td>\n",
       "      <td>15.12</td>\n",
       "      <td>8.712857</td>\n",
       "      <td>3.782947</td>\n",
       "      <td>4.63</td>\n",
       "      <td>12.33</td>\n",
       "      <td>...</td>\n",
       "      <td>7.822857</td>\n",
       "      <td>5.460237</td>\n",
       "      <td>6.54</td>\n",
       "      <td>18.66</td>\n",
       "      <td>10.421429</td>\n",
       "      <td>3.968272</td>\n",
       "      <td>3.33</td>\n",
       "      <td>26.30</td>\n",
       "      <td>10.382857</td>\n",
       "      <td>7.858246</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-05-21</th>\n",
       "      <td>4.88</td>\n",
       "      <td>15.04</td>\n",
       "      <td>8.225714</td>\n",
       "      <td>3.631730</td>\n",
       "      <td>3.58</td>\n",
       "      <td>10.17</td>\n",
       "      <td>5.631667</td>\n",
       "      <td>2.468906</td>\n",
       "      <td>5.91</td>\n",
       "      <td>15.96</td>\n",
       "      <td>...</td>\n",
       "      <td>7.114286</td>\n",
       "      <td>2.216889</td>\n",
       "      <td>6.63</td>\n",
       "      <td>12.00</td>\n",
       "      <td>9.624286</td>\n",
       "      <td>1.975853</td>\n",
       "      <td>5.91</td>\n",
       "      <td>14.96</td>\n",
       "      <td>10.612857</td>\n",
       "      <td>3.310819</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-05-28</th>\n",
       "      <td>4.96</td>\n",
       "      <td>11.79</td>\n",
       "      <td>8.155714</td>\n",
       "      <td>2.739433</td>\n",
       "      <td>3.67</td>\n",
       "      <td>12.50</td>\n",
       "      <td>7.388571</td>\n",
       "      <td>3.378537</td>\n",
       "      <td>3.58</td>\n",
       "      <td>20.96</td>\n",
       "      <td>...</td>\n",
       "      <td>7.535714</td>\n",
       "      <td>2.575661</td>\n",
       "      <td>6.13</td>\n",
       "      <td>14.33</td>\n",
       "      <td>10.518571</td>\n",
       "      <td>3.024524</td>\n",
       "      <td>8.00</td>\n",
       "      <td>17.04</td>\n",
       "      <td>11.697143</td>\n",
       "      <td>3.811818</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-06-04</th>\n",
       "      <td>7.00</td>\n",
       "      <td>15.92</td>\n",
       "      <td>10.321429</td>\n",
       "      <td>3.099701</td>\n",
       "      <td>4.75</td>\n",
       "      <td>9.79</td>\n",
       "      <td>7.407143</td>\n",
       "      <td>1.868125</td>\n",
       "      <td>6.83</td>\n",
       "      <td>15.96</td>\n",
       "      <td>...</td>\n",
       "      <td>9.035714</td>\n",
       "      <td>2.096989</td>\n",
       "      <td>8.71</td>\n",
       "      <td>17.00</td>\n",
       "      <td>12.298571</td>\n",
       "      <td>2.611139</td>\n",
       "      <td>10.63</td>\n",
       "      <td>17.96</td>\n",
       "      <td>13.597143</td>\n",
       "      <td>2.593586</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-06-11</th>\n",
       "      <td>8.29</td>\n",
       "      <td>14.42</td>\n",
       "      <td>10.917143</td>\n",
       "      <td>2.248597</td>\n",
       "      <td>6.83</td>\n",
       "      <td>11.54</td>\n",
       "      <td>8.992857</td>\n",
       "      <td>1.524836</td>\n",
       "      <td>6.04</td>\n",
       "      <td>11.58</td>\n",
       "      <td>...</td>\n",
       "      <td>8.397143</td>\n",
       "      <td>2.158323</td>\n",
       "      <td>5.37</td>\n",
       "      <td>16.17</td>\n",
       "      <td>10.148571</td>\n",
       "      <td>3.993062</td>\n",
       "      <td>5.96</td>\n",
       "      <td>19.83</td>\n",
       "      <td>12.250000</td>\n",
       "      <td>4.925055</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-06-18</th>\n",
       "      <td>6.13</td>\n",
       "      <td>14.33</td>\n",
       "      <td>10.571429</td>\n",
       "      <td>3.009482</td>\n",
       "      <td>4.12</td>\n",
       "      <td>14.54</td>\n",
       "      <td>9.565714</td>\n",
       "      <td>3.509444</td>\n",
       "      <td>6.50</td>\n",
       "      <td>15.50</td>\n",
       "      <td>...</td>\n",
       "      <td>9.594286</td>\n",
       "      <td>3.792400</td>\n",
       "      <td>7.29</td>\n",
       "      <td>25.25</td>\n",
       "      <td>15.351429</td>\n",
       "      <td>6.477887</td>\n",
       "      <td>6.13</td>\n",
       "      <td>24.71</td>\n",
       "      <td>15.025714</td>\n",
       "      <td>6.242673</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-06-25</th>\n",
       "      <td>4.00</td>\n",
       "      <td>9.00</td>\n",
       "      <td>7.345714</td>\n",
       "      <td>1.982035</td>\n",
       "      <td>3.25</td>\n",
       "      <td>9.50</td>\n",
       "      <td>6.108571</td>\n",
       "      <td>2.212460</td>\n",
       "      <td>5.13</td>\n",
       "      <td>10.37</td>\n",
       "      <td>...</td>\n",
       "      <td>11.257143</td>\n",
       "      <td>2.286218</td>\n",
       "      <td>11.00</td>\n",
       "      <td>19.08</td>\n",
       "      <td>14.370000</td>\n",
       "      <td>2.498386</td>\n",
       "      <td>13.75</td>\n",
       "      <td>21.50</td>\n",
       "      <td>17.410000</td>\n",
       "      <td>3.063011</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-07-02</th>\n",
       "      <td>7.21</td>\n",
       "      <td>13.13</td>\n",
       "      <td>10.236667</td>\n",
       "      <td>2.557856</td>\n",
       "      <td>6.34</td>\n",
       "      <td>14.37</td>\n",
       "      <td>9.482857</td>\n",
       "      <td>2.902411</td>\n",
       "      <td>7.62</td>\n",
       "      <td>10.79</td>\n",
       "      <td>...</td>\n",
       "      <td>10.268571</td>\n",
       "      <td>1.564144</td>\n",
       "      <td>6.96</td>\n",
       "      <td>21.87</td>\n",
       "      <td>14.535714</td>\n",
       "      <td>6.303747</td>\n",
       "      <td>8.50</td>\n",
       "      <td>16.79</td>\n",
       "      <td>12.133333</td>\n",
       "      <td>3.652313</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-07-09</th>\n",
       "      <td>7.29</td>\n",
       "      <td>17.50</td>\n",
       "      <td>11.715714</td>\n",
       "      <td>3.664855</td>\n",
       "      <td>3.75</td>\n",
       "      <td>10.75</td>\n",
       "      <td>7.220000</td>\n",
       "      <td>2.686658</td>\n",
       "      <td>7.41</td>\n",
       "      <td>14.92</td>\n",
       "      <td>...</td>\n",
       "      <td>10.547143</td>\n",
       "      <td>3.657179</td>\n",
       "      <td>7.08</td>\n",
       "      <td>20.41</td>\n",
       "      <td>12.220000</td>\n",
       "      <td>4.537988</td>\n",
       "      <td>12.08</td>\n",
       "      <td>21.29</td>\n",
       "      <td>15.987143</td>\n",
       "      <td>3.665705</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-07-16</th>\n",
       "      <td>8.63</td>\n",
       "      <td>22.50</td>\n",
       "      <td>16.680000</td>\n",
       "      <td>5.168710</td>\n",
       "      <td>7.87</td>\n",
       "      <td>19.29</td>\n",
       "      <td>13.518571</td>\n",
       "      <td>3.849630</td>\n",
       "      <td>8.00</td>\n",
       "      <td>14.29</td>\n",
       "      <td>...</td>\n",
       "      <td>10.157143</td>\n",
       "      <td>3.271899</td>\n",
       "      <td>5.04</td>\n",
       "      <td>20.25</td>\n",
       "      <td>13.520000</td>\n",
       "      <td>4.971060</td>\n",
       "      <td>5.96</td>\n",
       "      <td>21.96</td>\n",
       "      <td>12.524286</td>\n",
       "      <td>4.974273</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-07-23</th>\n",
       "      <td>3.04</td>\n",
       "      <td>5.88</td>\n",
       "      <td>4.202857</td>\n",
       "      <td>1.047978</td>\n",
       "      <td>2.92</td>\n",
       "      <td>6.79</td>\n",
       "      <td>4.255714</td>\n",
       "      <td>1.400010</td>\n",
       "      <td>4.08</td>\n",
       "      <td>12.67</td>\n",
       "      <td>...</td>\n",
       "      <td>6.041429</td>\n",
       "      <td>1.439785</td>\n",
       "      <td>4.21</td>\n",
       "      <td>10.13</td>\n",
       "      <td>7.524286</td>\n",
       "      <td>2.050218</td>\n",
       "      <td>5.41</td>\n",
       "      <td>10.92</td>\n",
       "      <td>8.415714</td>\n",
       "      <td>2.133994</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-07-30</th>\n",
       "      <td>6.13</td>\n",
       "      <td>16.08</td>\n",
       "      <td>10.561429</td>\n",
       "      <td>4.157641</td>\n",
       "      <td>4.63</td>\n",
       "      <td>13.79</td>\n",
       "      <td>8.445714</td>\n",
       "      <td>3.203206</td>\n",
       "      <td>6.42</td>\n",
       "      <td>15.67</td>\n",
       "      <td>...</td>\n",
       "      <td>9.470000</td>\n",
       "      <td>4.350268</td>\n",
       "      <td>7.87</td>\n",
       "      <td>22.17</td>\n",
       "      <td>12.841429</td>\n",
       "      <td>5.580903</td>\n",
       "      <td>6.13</td>\n",
       "      <td>25.37</td>\n",
       "      <td>13.761429</td>\n",
       "      <td>6.664574</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-08-06</th>\n",
       "      <td>7.67</td>\n",
       "      <td>16.08</td>\n",
       "      <td>10.870000</td>\n",
       "      <td>2.950887</td>\n",
       "      <td>5.09</td>\n",
       "      <td>15.79</td>\n",
       "      <td>8.792857</td>\n",
       "      <td>3.985226</td>\n",
       "      <td>5.54</td>\n",
       "      <td>15.59</td>\n",
       "      <td>...</td>\n",
       "      <td>8.951429</td>\n",
       "      <td>2.903018</td>\n",
       "      <td>6.17</td>\n",
       "      <td>18.54</td>\n",
       "      <td>11.595714</td>\n",
       "      <td>4.901377</td>\n",
       "      <td>9.08</td>\n",
       "      <td>20.25</td>\n",
       "      <td>13.760000</td>\n",
       "      <td>4.448251</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-08-13</th>\n",
       "      <td>2.88</td>\n",
       "      <td>14.21</td>\n",
       "      <td>10.058333</td>\n",
       "      <td>4.422268</td>\n",
       "      <td>4.42</td>\n",
       "      <td>10.00</td>\n",
       "      <td>7.941429</td>\n",
       "      <td>2.053326</td>\n",
       "      <td>6.00</td>\n",
       "      <td>11.63</td>\n",
       "      <td>...</td>\n",
       "      <td>7.235000</td>\n",
       "      <td>2.073777</td>\n",
       "      <td>5.88</td>\n",
       "      <td>14.29</td>\n",
       "      <td>10.934286</td>\n",
       "      <td>2.931302</td>\n",
       "      <td>5.88</td>\n",
       "      <td>15.16</td>\n",
       "      <td>10.125714</td>\n",
       "      <td>3.356585</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-08-20</th>\n",
       "      <td>13.13</td>\n",
       "      <td>18.91</td>\n",
       "      <td>15.607143</td>\n",
       "      <td>2.283635</td>\n",
       "      <td>7.25</td>\n",
       "      <td>13.62</td>\n",
       "      <td>10.565714</td>\n",
       "      <td>2.523416</td>\n",
       "      <td>9.17</td>\n",
       "      <td>14.04</td>\n",
       "      <td>...</td>\n",
       "      <td>12.244286</td>\n",
       "      <td>2.730237</td>\n",
       "      <td>9.59</td>\n",
       "      <td>21.92</td>\n",
       "      <td>14.922857</td>\n",
       "      <td>4.086725</td>\n",
       "      <td>13.04</td>\n",
       "      <td>24.30</td>\n",
       "      <td>16.626667</td>\n",
       "      <td>3.934238</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-08-27</th>\n",
       "      <td>7.67</td>\n",
       "      <td>18.16</td>\n",
       "      <td>12.391429</td>\n",
       "      <td>3.395857</td>\n",
       "      <td>6.87</td>\n",
       "      <td>14.58</td>\n",
       "      <td>11.430000</td>\n",
       "      <td>3.174702</td>\n",
       "      <td>9.50</td>\n",
       "      <td>17.83</td>\n",
       "      <td>...</td>\n",
       "      <td>12.507143</td>\n",
       "      <td>3.855302</td>\n",
       "      <td>5.75</td>\n",
       "      <td>23.38</td>\n",
       "      <td>16.251429</td>\n",
       "      <td>6.711322</td>\n",
       "      <td>8.29</td>\n",
       "      <td>22.29</td>\n",
       "      <td>16.485714</td>\n",
       "      <td>4.947608</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-09-03</th>\n",
       "      <td>3.63</td>\n",
       "      <td>14.46</td>\n",
       "      <td>8.678571</td>\n",
       "      <td>4.398615</td>\n",
       "      <td>1.13</td>\n",
       "      <td>22.00</td>\n",
       "      <td>8.821429</td>\n",
       "      <td>7.474025</td>\n",
       "      <td>2.42</td>\n",
       "      <td>12.75</td>\n",
       "      <td>...</td>\n",
       "      <td>8.924286</td>\n",
       "      <td>3.993736</td>\n",
       "      <td>4.79</td>\n",
       "      <td>24.71</td>\n",
       "      <td>13.664286</td>\n",
       "      <td>7.678051</td>\n",
       "      <td>5.41</td>\n",
       "      <td>22.54</td>\n",
       "      <td>11.022857</td>\n",
       "      <td>6.308087</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-09-10</th>\n",
       "      <td>5.00</td>\n",
       "      <td>17.62</td>\n",
       "      <td>10.541429</td>\n",
       "      <td>5.207278</td>\n",
       "      <td>3.04</td>\n",
       "      <td>13.59</td>\n",
       "      <td>8.798571</td>\n",
       "      <td>4.003996</td>\n",
       "      <td>3.63</td>\n",
       "      <td>14.88</td>\n",
       "      <td>...</td>\n",
       "      <td>7.565714</td>\n",
       "      <td>3.649278</td>\n",
       "      <td>5.41</td>\n",
       "      <td>15.83</td>\n",
       "      <td>10.700000</td>\n",
       "      <td>4.220584</td>\n",
       "      <td>3.37</td>\n",
       "      <td>20.25</td>\n",
       "      <td>11.034286</td>\n",
       "      <td>6.049619</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-09-17</th>\n",
       "      <td>5.33</td>\n",
       "      <td>28.75</td>\n",
       "      <td>17.160000</td>\n",
       "      <td>7.679190</td>\n",
       "      <td>7.12</td>\n",
       "      <td>22.08</td>\n",
       "      <td>14.440000</td>\n",
       "      <td>5.360585</td>\n",
       "      <td>7.29</td>\n",
       "      <td>26.50</td>\n",
       "      <td>...</td>\n",
       "      <td>14.268571</td>\n",
       "      <td>5.128338</td>\n",
       "      <td>13.92</td>\n",
       "      <td>23.91</td>\n",
       "      <td>19.878571</td>\n",
       "      <td>4.464252</td>\n",
       "      <td>14.67</td>\n",
       "      <td>33.09</td>\n",
       "      <td>18.984286</td>\n",
       "      <td>6.332885</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-09-24</th>\n",
       "      <td>6.92</td>\n",
       "      <td>10.25</td>\n",
       "      <td>8.500000</td>\n",
       "      <td>1.267399</td>\n",
       "      <td>2.92</td>\n",
       "      <td>13.62</td>\n",
       "      <td>7.154286</td>\n",
       "      <td>3.445262</td>\n",
       "      <td>5.33</td>\n",
       "      <td>12.17</td>\n",
       "      <td>...</td>\n",
       "      <td>6.798571</td>\n",
       "      <td>2.354092</td>\n",
       "      <td>4.54</td>\n",
       "      <td>20.96</td>\n",
       "      <td>11.018571</td>\n",
       "      <td>5.235868</td>\n",
       "      <td>5.25</td>\n",
       "      <td>14.62</td>\n",
       "      <td>9.814286</td>\n",
       "      <td>3.113507</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-10-01</th>\n",
       "      <td>10.34</td>\n",
       "      <td>23.21</td>\n",
       "      <td>16.044286</td>\n",
       "      <td>4.559572</td>\n",
       "      <td>6.96</td>\n",
       "      <td>13.62</td>\n",
       "      <td>11.361667</td>\n",
       "      <td>2.812482</td>\n",
       "      <td>7.87</td>\n",
       "      <td>17.58</td>\n",
       "      <td>...</td>\n",
       "      <td>11.840000</td>\n",
       "      <td>3.908397</td>\n",
       "      <td>7.79</td>\n",
       "      <td>21.37</td>\n",
       "      <td>16.208571</td>\n",
       "      <td>5.091268</td>\n",
       "      <td>4.04</td>\n",
       "      <td>17.16</td>\n",
       "      <td>13.338571</td>\n",
       "      <td>4.696504</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-10-08</th>\n",
       "      <td>3.13</td>\n",
       "      <td>16.08</td>\n",
       "      <td>11.250000</td>\n",
       "      <td>5.596710</td>\n",
       "      <td>3.63</td>\n",
       "      <td>16.96</td>\n",
       "      <td>8.757143</td>\n",
       "      <td>5.060803</td>\n",
       "      <td>4.96</td>\n",
       "      <td>17.83</td>\n",
       "      <td>...</td>\n",
       "      <td>7.662857</td>\n",
       "      <td>4.296870</td>\n",
       "      <td>4.79</td>\n",
       "      <td>17.83</td>\n",
       "      <td>8.810000</td>\n",
       "      <td>4.800403</td>\n",
       "      <td>4.83</td>\n",
       "      <td>19.62</td>\n",
       "      <td>11.410000</td>\n",
       "      <td>5.462002</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-10-15</th>\n",
       "      <td>3.71</td>\n",
       "      <td>17.12</td>\n",
       "      <td>10.881667</td>\n",
       "      <td>4.780675</td>\n",
       "      <td>6.13</td>\n",
       "      <td>13.25</td>\n",
       "      <td>9.734286</td>\n",
       "      <td>2.707483</td>\n",
       "      <td>4.21</td>\n",
       "      <td>20.96</td>\n",
       "      <td>...</td>\n",
       "      <td>9.494286</td>\n",
       "      <td>3.569308</td>\n",
       "      <td>8.54</td>\n",
       "      <td>20.46</td>\n",
       "      <td>14.451429</td>\n",
       "      <td>4.113200</td>\n",
       "      <td>10.75</td>\n",
       "      <td>21.04</td>\n",
       "      <td>15.260000</td>\n",
       "      <td>4.098130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-10-22</th>\n",
       "      <td>10.46</td>\n",
       "      <td>28.62</td>\n",
       "      <td>19.260000</td>\n",
       "      <td>7.888314</td>\n",
       "      <td>3.75</td>\n",
       "      <td>19.46</td>\n",
       "      <td>13.364286</td>\n",
       "      <td>5.998199</td>\n",
       "      <td>9.92</td>\n",
       "      <td>22.63</td>\n",
       "      <td>...</td>\n",
       "      <td>16.461429</td>\n",
       "      <td>5.890511</td>\n",
       "      <td>10.88</td>\n",
       "      <td>24.71</td>\n",
       "      <td>17.477143</td>\n",
       "      <td>5.645871</td>\n",
       "      <td>13.46</td>\n",
       "      <td>33.45</td>\n",
       "      <td>23.641429</td>\n",
       "      <td>7.468377</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-10-29</th>\n",
       "      <td>4.33</td>\n",
       "      <td>26.42</td>\n",
       "      <td>16.077143</td>\n",
       "      <td>7.957637</td>\n",
       "      <td>2.75</td>\n",
       "      <td>21.25</td>\n",
       "      <td>11.867143</td>\n",
       "      <td>6.879973</td>\n",
       "      <td>4.79</td>\n",
       "      <td>23.09</td>\n",
       "      <td>...</td>\n",
       "      <td>12.952857</td>\n",
       "      <td>6.277629</td>\n",
       "      <td>8.50</td>\n",
       "      <td>27.29</td>\n",
       "      <td>15.592857</td>\n",
       "      <td>7.056150</td>\n",
       "      <td>9.83</td>\n",
       "      <td>30.88</td>\n",
       "      <td>18.404286</td>\n",
       "      <td>8.340881</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-11-05</th>\n",
       "      <td>5.88</td>\n",
       "      <td>15.79</td>\n",
       "      <td>11.571429</td>\n",
       "      <td>3.369201</td>\n",
       "      <td>3.96</td>\n",
       "      <td>13.46</td>\n",
       "      <td>9.590000</td>\n",
       "      <td>3.900278</td>\n",
       "      <td>6.54</td>\n",
       "      <td>14.33</td>\n",
       "      <td>...</td>\n",
       "      <td>11.864286</td>\n",
       "      <td>2.784450</td>\n",
       "      <td>10.29</td>\n",
       "      <td>20.17</td>\n",
       "      <td>16.322857</td>\n",
       "      <td>4.038493</td>\n",
       "      <td>13.37</td>\n",
       "      <td>23.58</td>\n",
       "      <td>19.195714</td>\n",
       "      <td>3.870800</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-11-12</th>\n",
       "      <td>5.46</td>\n",
       "      <td>16.08</td>\n",
       "      <td>10.428571</td>\n",
       "      <td>3.939811</td>\n",
       "      <td>5.50</td>\n",
       "      <td>10.75</td>\n",
       "      <td>7.690000</td>\n",
       "      <td>2.141191</td>\n",
       "      <td>3.83</td>\n",
       "      <td>20.41</td>\n",
       "      <td>...</td>\n",
       "      <td>6.415714</td>\n",
       "      <td>2.843518</td>\n",
       "      <td>6.13</td>\n",
       "      <td>12.58</td>\n",
       "      <td>9.208571</td>\n",
       "      <td>2.532196</td>\n",
       "      <td>5.71</td>\n",
       "      <td>15.54</td>\n",
       "      <td>10.858571</td>\n",
       "      <td>3.690752</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-11-19</th>\n",
       "      <td>7.50</td>\n",
       "      <td>15.00</td>\n",
       "      <td>10.798571</td>\n",
       "      <td>2.784358</td>\n",
       "      <td>4.21</td>\n",
       "      <td>13.00</td>\n",
       "      <td>7.951429</td>\n",
       "      <td>3.208548</td>\n",
       "      <td>6.46</td>\n",
       "      <td>32.71</td>\n",
       "      <td>...</td>\n",
       "      <td>6.031429</td>\n",
       "      <td>4.402588</td>\n",
       "      <td>0.71</td>\n",
       "      <td>9.59</td>\n",
       "      <td>5.875714</td>\n",
       "      <td>3.643285</td>\n",
       "      <td>2.00</td>\n",
       "      <td>13.25</td>\n",
       "      <td>5.737143</td>\n",
       "      <td>3.787654</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-11-26</th>\n",
       "      <td>5.75</td>\n",
       "      <td>14.29</td>\n",
       "      <td>9.154286</td>\n",
       "      <td>3.214368</td>\n",
       "      <td>3.29</td>\n",
       "      <td>11.79</td>\n",
       "      <td>7.337143</td>\n",
       "      <td>3.277904</td>\n",
       "      <td>4.42</td>\n",
       "      <td>14.46</td>\n",
       "      <td>...</td>\n",
       "      <td>9.582857</td>\n",
       "      <td>2.747452</td>\n",
       "      <td>6.50</td>\n",
       "      <td>20.46</td>\n",
       "      <td>11.772857</td>\n",
       "      <td>5.407223</td>\n",
       "      <td>4.25</td>\n",
       "      <td>22.58</td>\n",
       "      <td>12.732857</td>\n",
       "      <td>6.475867</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-12-03</th>\n",
       "      <td>7.92</td>\n",
       "      <td>23.75</td>\n",
       "      <td>12.608571</td>\n",
       "      <td>5.704669</td>\n",
       "      <td>4.67</td>\n",
       "      <td>18.71</td>\n",
       "      <td>10.442857</td>\n",
       "      <td>5.107089</td>\n",
       "      <td>8.00</td>\n",
       "      <td>19.92</td>\n",
       "      <td>...</td>\n",
       "      <td>7.911429</td>\n",
       "      <td>3.680477</td>\n",
       "      <td>5.50</td>\n",
       "      <td>19.04</td>\n",
       "      <td>11.464286</td>\n",
       "      <td>5.552648</td>\n",
       "      <td>5.88</td>\n",
       "      <td>21.29</td>\n",
       "      <td>14.725714</td>\n",
       "      <td>5.233192</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-12-10</th>\n",
       "      <td>10.83</td>\n",
       "      <td>23.71</td>\n",
       "      <td>17.362857</td>\n",
       "      <td>4.890152</td>\n",
       "      <td>9.21</td>\n",
       "      <td>21.37</td>\n",
       "      <td>14.362857</td>\n",
       "      <td>4.115506</td>\n",
       "      <td>9.71</td>\n",
       "      <td>20.54</td>\n",
       "      <td>...</td>\n",
       "      <td>12.022857</td>\n",
       "      <td>4.156207</td>\n",
       "      <td>10.71</td>\n",
       "      <td>21.79</td>\n",
       "      <td>15.975714</td>\n",
       "      <td>4.667933</td>\n",
       "      <td>7.58</td>\n",
       "      <td>29.33</td>\n",
       "      <td>16.241429</td>\n",
       "      <td>7.345893</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-12-17</th>\n",
       "      <td>9.29</td>\n",
       "      <td>21.34</td>\n",
       "      <td>14.985714</td>\n",
       "      <td>4.095106</td>\n",
       "      <td>8.63</td>\n",
       "      <td>17.62</td>\n",
       "      <td>13.472857</td>\n",
       "      <td>3.587886</td>\n",
       "      <td>9.04</td>\n",
       "      <td>19.00</td>\n",
       "      <td>...</td>\n",
       "      <td>11.058571</td>\n",
       "      <td>4.633398</td>\n",
       "      <td>5.50</td>\n",
       "      <td>22.83</td>\n",
       "      <td>15.112857</td>\n",
       "      <td>6.531043</td>\n",
       "      <td>6.50</td>\n",
       "      <td>21.12</td>\n",
       "      <td>14.644286</td>\n",
       "      <td>5.665006</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-12-24</th>\n",
       "      <td>11.46</td>\n",
       "      <td>24.41</td>\n",
       "      <td>15.757143</td>\n",
       "      <td>4.959717</td>\n",
       "      <td>9.79</td>\n",
       "      <td>16.13</td>\n",
       "      <td>11.971429</td>\n",
       "      <td>2.220866</td>\n",
       "      <td>8.08</td>\n",
       "      <td>22.13</td>\n",
       "      <td>...</td>\n",
       "      <td>7.697143</td>\n",
       "      <td>4.637096</td>\n",
       "      <td>5.29</td>\n",
       "      <td>17.67</td>\n",
       "      <td>9.958571</td>\n",
       "      <td>5.065308</td>\n",
       "      <td>2.62</td>\n",
       "      <td>16.62</td>\n",
       "      <td>8.164286</td>\n",
       "      <td>5.048035</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1961-12-31</th>\n",
       "      <td>5.04</td>\n",
       "      <td>20.54</td>\n",
       "      <td>13.634286</td>\n",
       "      <td>5.787783</td>\n",
       "      <td>3.08</td>\n",
       "      <td>16.04</td>\n",
       "      <td>9.504286</td>\n",
       "      <td>4.566479</td>\n",
       "      <td>2.13</td>\n",
       "      <td>29.33</td>\n",
       "      <td>...</td>\n",
       "      <td>7.701429</td>\n",
       "      <td>3.526625</td>\n",
       "      <td>3.75</td>\n",
       "      <td>13.21</td>\n",
       "      <td>9.697143</td>\n",
       "      <td>3.262217</td>\n",
       "      <td>6.63</td>\n",
       "      <td>15.21</td>\n",
       "      <td>12.840000</td>\n",
       "      <td>3.012729</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>52 rows Ã— 48 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "              RPT                                VAL                    \\\n",
       "              min    max       mean       std    min    max       mean   \n",
       "Yr_Mo_Dy                                                                 \n",
       "1961-01-08  10.58  18.50  13.541429  2.631321   6.63  16.88  11.486667   \n",
       "1961-01-15   9.04  19.75  12.468571  3.555392   3.54  12.08   8.967143   \n",
       "1961-01-22   4.92  19.83  13.204286  5.337402   3.42  14.37   9.862857   \n",
       "1961-01-29  13.62  25.04  19.880000  4.619061   9.96  23.91  16.141429   \n",
       "1961-02-05  10.58  24.21  16.827143  5.251408   9.46  24.21  15.460000   \n",
       "1961-02-12  16.00  24.54  19.684286  3.587677  11.54  21.42  16.417143   \n",
       "1961-02-19   6.04  22.50  15.130000  5.064609  11.63  20.17  15.091429   \n",
       "1961-02-26   7.79  25.80  15.221429  7.020716   7.08  21.50  13.625714   \n",
       "1961-03-05  10.96  13.33  12.101429  0.997721   8.83  17.00  12.951429   \n",
       "1961-03-12   4.88  14.79   9.376667  3.732263   8.08  16.96  11.578571   \n",
       "1961-03-19   4.92  16.88  11.911429  3.860036   9.46  15.54  13.501429   \n",
       "1961-03-26   6.29  15.00   9.567143  3.613298   2.58  11.63   8.387143   \n",
       "1961-04-02   5.88  18.25  10.757143  5.046922   3.50  16.29   8.852857   \n",
       "1961-04-09   4.50  18.12  11.964286  4.604392   7.04  14.62  10.654286   \n",
       "1961-04-16   4.71  15.50   8.965714  3.937727   4.83  12.25   8.000000   \n",
       "1961-04-23   4.00  21.09  12.621429  5.676655   3.71  15.41  10.438571   \n",
       "1961-04-30   4.08  16.29  10.117143  4.349662   6.50  14.46   9.798571   \n",
       "1961-05-07   9.87  23.00  15.367143  5.025507  10.29  19.79  13.970000   \n",
       "1961-05-14   3.54  12.79   7.772857  3.371022   3.96  15.12   8.712857   \n",
       "1961-05-21   4.88  15.04   8.225714  3.631730   3.58  10.17   5.631667   \n",
       "1961-05-28   4.96  11.79   8.155714  2.739433   3.67  12.50   7.388571   \n",
       "1961-06-04   7.00  15.92  10.321429  3.099701   4.75   9.79   7.407143   \n",
       "1961-06-11   8.29  14.42  10.917143  2.248597   6.83  11.54   8.992857   \n",
       "1961-06-18   6.13  14.33  10.571429  3.009482   4.12  14.54   9.565714   \n",
       "1961-06-25   4.00   9.00   7.345714  1.982035   3.25   9.50   6.108571   \n",
       "1961-07-02   7.21  13.13  10.236667  2.557856   6.34  14.37   9.482857   \n",
       "1961-07-09   7.29  17.50  11.715714  3.664855   3.75  10.75   7.220000   \n",
       "1961-07-16   8.63  22.50  16.680000  5.168710   7.87  19.29  13.518571   \n",
       "1961-07-23   3.04   5.88   4.202857  1.047978   2.92   6.79   4.255714   \n",
       "1961-07-30   6.13  16.08  10.561429  4.157641   4.63  13.79   8.445714   \n",
       "1961-08-06   7.67  16.08  10.870000  2.950887   5.09  15.79   8.792857   \n",
       "1961-08-13   2.88  14.21  10.058333  4.422268   4.42  10.00   7.941429   \n",
       "1961-08-20  13.13  18.91  15.607143  2.283635   7.25  13.62  10.565714   \n",
       "1961-08-27   7.67  18.16  12.391429  3.395857   6.87  14.58  11.430000   \n",
       "1961-09-03   3.63  14.46   8.678571  4.398615   1.13  22.00   8.821429   \n",
       "1961-09-10   5.00  17.62  10.541429  5.207278   3.04  13.59   8.798571   \n",
       "1961-09-17   5.33  28.75  17.160000  7.679190   7.12  22.08  14.440000   \n",
       "1961-09-24   6.92  10.25   8.500000  1.267399   2.92  13.62   7.154286   \n",
       "1961-10-01  10.34  23.21  16.044286  4.559572   6.96  13.62  11.361667   \n",
       "1961-10-08   3.13  16.08  11.250000  5.596710   3.63  16.96   8.757143   \n",
       "1961-10-15   3.71  17.12  10.881667  4.780675   6.13  13.25   9.734286   \n",
       "1961-10-22  10.46  28.62  19.260000  7.888314   3.75  19.46  13.364286   \n",
       "1961-10-29   4.33  26.42  16.077143  7.957637   2.75  21.25  11.867143   \n",
       "1961-11-05   5.88  15.79  11.571429  3.369201   3.96  13.46   9.590000   \n",
       "1961-11-12   5.46  16.08  10.428571  3.939811   5.50  10.75   7.690000   \n",
       "1961-11-19   7.50  15.00  10.798571  2.784358   4.21  13.00   7.951429   \n",
       "1961-11-26   5.75  14.29   9.154286  3.214368   3.29  11.79   7.337143   \n",
       "1961-12-03   7.92  23.75  12.608571  5.704669   4.67  18.71  10.442857   \n",
       "1961-12-10  10.83  23.71  17.362857  4.890152   9.21  21.37  14.362857   \n",
       "1961-12-17   9.29  21.34  14.985714  4.095106   8.63  17.62  13.472857   \n",
       "1961-12-24  11.46  24.41  15.757143  4.959717   9.79  16.13  11.971429   \n",
       "1961-12-31   5.04  20.54  13.634286  5.787783   3.08  16.04   9.504286   \n",
       "\n",
       "                        ROS         ...        CLO              BEL         \\\n",
       "                 std    min    max  ...       mean       std    min    max   \n",
       "Yr_Mo_Dy                            ...                                      \n",
       "1961-01-08  3.949525   7.62  12.33  ...   8.497143  1.704941   5.46  17.54   \n",
       "1961-01-15  3.148945   7.08  19.50  ...   7.571429  4.084293   5.25  20.71   \n",
       "1961-01-22  3.837785   7.29  20.79  ...   8.124286  4.783952   6.50  15.92   \n",
       "1961-01-29  5.170224  12.67  25.84  ...  15.640000  3.713368  14.04  27.71   \n",
       "1961-02-05  5.187395   9.04  19.70  ...   9.460000  2.839501   9.17  19.33   \n",
       "1961-02-12  3.608373  13.67  21.34  ...  14.440000  1.746749  15.21  26.38   \n",
       "1961-02-19  3.575012   6.13  19.41  ...  13.542857  2.531361  14.09  29.63   \n",
       "1961-02-26  5.147348   6.08  22.42  ...  12.730000  4.920064   9.59  23.21   \n",
       "1961-03-05  2.851955   8.17  13.67  ...  12.370000  1.593685  11.58  23.45   \n",
       "1961-03-12  3.230167   7.54  16.38  ...  10.458571  3.655113  10.21  22.71   \n",
       "1961-03-19  2.352867   5.25  13.96  ...  11.627143  3.099472  11.29  22.79   \n",
       "1961-03-26  3.657265   4.79  15.63  ...  11.481429  2.538224   8.25  21.34   \n",
       "1961-04-02  4.687315   5.09  14.96  ...   9.631429  3.191115   7.21  18.63   \n",
       "1961-04-09  2.845399   9.29  18.29  ...   7.238571  2.336182   7.62  17.16   \n",
       "1961-04-16  2.607118   3.92  15.79  ...   6.178571  2.161137   5.75  16.17   \n",
       "1961-04-23  4.631736   3.33  17.00  ...   9.551429  3.347972   6.75  19.21   \n",
       "1961-04-30  2.871425   2.54  14.96  ...   6.124286  2.840568   5.13  13.04   \n",
       "1961-05-07  3.750835   8.42  21.21  ...  11.585714  3.620819   4.79  28.08   \n",
       "1961-05-14  3.782947   4.63  12.33  ...   7.822857  5.460237   6.54  18.66   \n",
       "1961-05-21  2.468906   5.91  15.96  ...   7.114286  2.216889   6.63  12.00   \n",
       "1961-05-28  3.378537   3.58  20.96  ...   7.535714  2.575661   6.13  14.33   \n",
       "1961-06-04  1.868125   6.83  15.96  ...   9.035714  2.096989   8.71  17.00   \n",
       "1961-06-11  1.524836   6.04  11.58  ...   8.397143  2.158323   5.37  16.17   \n",
       "1961-06-18  3.509444   6.50  15.50  ...   9.594286  3.792400   7.29  25.25   \n",
       "1961-06-25  2.212460   5.13  10.37  ...  11.257143  2.286218  11.00  19.08   \n",
       "1961-07-02  2.902411   7.62  10.79  ...  10.268571  1.564144   6.96  21.87   \n",
       "1961-07-09  2.686658   7.41  14.92  ...  10.547143  3.657179   7.08  20.41   \n",
       "1961-07-16  3.849630   8.00  14.29  ...  10.157143  3.271899   5.04  20.25   \n",
       "1961-07-23  1.400010   4.08  12.67  ...   6.041429  1.439785   4.21  10.13   \n",
       "1961-07-30  3.203206   6.42  15.67  ...   9.470000  4.350268   7.87  22.17   \n",
       "1961-08-06  3.985226   5.54  15.59  ...   8.951429  2.903018   6.17  18.54   \n",
       "1961-08-13  2.053326   6.00  11.63  ...   7.235000  2.073777   5.88  14.29   \n",
       "1961-08-20  2.523416   9.17  14.04  ...  12.244286  2.730237   9.59  21.92   \n",
       "1961-08-27  3.174702   9.50  17.83  ...  12.507143  3.855302   5.75  23.38   \n",
       "1961-09-03  7.474025   2.42  12.75  ...   8.924286  3.993736   4.79  24.71   \n",
       "1961-09-10  4.003996   3.63  14.88  ...   7.565714  3.649278   5.41  15.83   \n",
       "1961-09-17  5.360585   7.29  26.50  ...  14.268571  5.128338  13.92  23.91   \n",
       "1961-09-24  3.445262   5.33  12.17  ...   6.798571  2.354092   4.54  20.96   \n",
       "1961-10-01  2.812482   7.87  17.58  ...  11.840000  3.908397   7.79  21.37   \n",
       "1961-10-08  5.060803   4.96  17.83  ...   7.662857  4.296870   4.79  17.83   \n",
       "1961-10-15  2.707483   4.21  20.96  ...   9.494286  3.569308   8.54  20.46   \n",
       "1961-10-22  5.998199   9.92  22.63  ...  16.461429  5.890511  10.88  24.71   \n",
       "1961-10-29  6.879973   4.79  23.09  ...  12.952857  6.277629   8.50  27.29   \n",
       "1961-11-05  3.900278   6.54  14.33  ...  11.864286  2.784450  10.29  20.17   \n",
       "1961-11-12  2.141191   3.83  20.41  ...   6.415714  2.843518   6.13  12.58   \n",
       "1961-11-19  3.208548   6.46  32.71  ...   6.031429  4.402588   0.71   9.59   \n",
       "1961-11-26  3.277904   4.42  14.46  ...   9.582857  2.747452   6.50  20.46   \n",
       "1961-12-03  5.107089   8.00  19.92  ...   7.911429  3.680477   5.50  19.04   \n",
       "1961-12-10  4.115506   9.71  20.54  ...  12.022857  4.156207  10.71  21.79   \n",
       "1961-12-17  3.587886   9.04  19.00  ...  11.058571  4.633398   5.50  22.83   \n",
       "1961-12-24  2.220866   8.08  22.13  ...   7.697143  4.637096   5.29  17.67   \n",
       "1961-12-31  4.566479   2.13  29.33  ...   7.701429  3.526625   3.75  13.21   \n",
       "\n",
       "                                   MAL                              \n",
       "                 mean       std    min    max       mean       std  \n",
       "Yr_Mo_Dy                                                            \n",
       "1961-01-08  12.481429  4.349139  10.88  16.46  13.238571  1.773062  \n",
       "1961-01-15  11.125714  5.552215   5.17  16.92  11.024286  4.692355  \n",
       "1961-01-22   9.821429  3.626584   6.79  17.96  11.434286  4.237239  \n",
       "1961-01-29  20.930000  5.210726  17.50  27.63  22.530000  3.874721  \n",
       "1961-02-05  14.012857  4.210858   7.17  19.25  11.935714  4.336104  \n",
       "1961-02-12  21.832857  4.063753  17.04  21.84  19.155714  1.828705  \n",
       "1961-02-19  21.167143  5.910938  10.96  22.58  16.584286  4.685377  \n",
       "1961-02-26  16.304286  5.091162   6.67  23.87  14.322857  6.182283  \n",
       "1961-03-05  17.842857  4.332331   8.83  17.54  13.951667  3.021387  \n",
       "1961-03-12  16.701429  4.358759   5.54  22.54  14.420000  5.769890  \n",
       "1961-03-19  19.350000  3.779727  11.34  22.95  16.227143  4.331958  \n",
       "1961-03-26  14.037143  4.318069  13.13  22.50  18.134286  3.701846  \n",
       "1961-04-02  13.471429  4.179854   7.17  19.58  13.900000  3.924555  \n",
       "1961-04-09  11.712857  3.147781   7.21  15.34  11.371429  2.598271  \n",
       "1961-04-16   9.482857  3.641464   5.66  12.87   8.690000  2.747842  \n",
       "1961-04-23  13.620000  4.735096   4.96  20.46  12.470000  5.908542  \n",
       "1961-04-30   9.720000  2.948237   2.67  17.50   8.637143  5.108365  \n",
       "1961-05-07  17.548571  8.003490   3.83  26.58  14.571429  7.728504  \n",
       "1961-05-14  10.421429  3.968272   3.33  26.30  10.382857  7.858246  \n",
       "1961-05-21   9.624286  1.975853   5.91  14.96  10.612857  3.310819  \n",
       "1961-05-28  10.518571  3.024524   8.00  17.04  11.697143  3.811818  \n",
       "1961-06-04  12.298571  2.611139  10.63  17.96  13.597143  2.593586  \n",
       "1961-06-11  10.148571  3.993062   5.96  19.83  12.250000  4.925055  \n",
       "1961-06-18  15.351429  6.477887   6.13  24.71  15.025714  6.242673  \n",
       "1961-06-25  14.370000  2.498386  13.75  21.50  17.410000  3.063011  \n",
       "1961-07-02  14.535714  6.303747   8.50  16.79  12.133333  3.652313  \n",
       "1961-07-09  12.220000  4.537988  12.08  21.29  15.987143  3.665705  \n",
       "1961-07-16  13.520000  4.971060   5.96  21.96  12.524286  4.974273  \n",
       "1961-07-23   7.524286  2.050218   5.41  10.92   8.415714  2.133994  \n",
       "1961-07-30  12.841429  5.580903   6.13  25.37  13.761429  6.664574  \n",
       "1961-08-06  11.595714  4.901377   9.08  20.25  13.760000  4.448251  \n",
       "1961-08-13  10.934286  2.931302   5.88  15.16  10.125714  3.356585  \n",
       "1961-08-20  14.922857  4.086725  13.04  24.30  16.626667  3.934238  \n",
       "1961-08-27  16.251429  6.711322   8.29  22.29  16.485714  4.947608  \n",
       "1961-09-03  13.664286  7.678051   5.41  22.54  11.022857  6.308087  \n",
       "1961-09-10  10.700000  4.220584   3.37  20.25  11.034286  6.049619  \n",
       "1961-09-17  19.878571  4.464252  14.67  33.09  18.984286  6.332885  \n",
       "1961-09-24  11.018571  5.235868   5.25  14.62   9.814286  3.113507  \n",
       "1961-10-01  16.208571  5.091268   4.04  17.16  13.338571  4.696504  \n",
       "1961-10-08   8.810000  4.800403   4.83  19.62  11.410000  5.462002  \n",
       "1961-10-15  14.451429  4.113200  10.75  21.04  15.260000  4.098130  \n",
       "1961-10-22  17.477143  5.645871  13.46  33.45  23.641429  7.468377  \n",
       "1961-10-29  15.592857  7.056150   9.83  30.88  18.404286  8.340881  \n",
       "1961-11-05  16.322857  4.038493  13.37  23.58  19.195714  3.870800  \n",
       "1961-11-12   9.208571  2.532196   5.71  15.54  10.858571  3.690752  \n",
       "1961-11-19   5.875714  3.643285   2.00  13.25   5.737143  3.787654  \n",
       "1961-11-26  11.772857  5.407223   4.25  22.58  12.732857  6.475867  \n",
       "1961-12-03  11.464286  5.552648   5.88  21.29  14.725714  5.233192  \n",
       "1961-12-10  15.975714  4.667933   7.58  29.33  16.241429  7.345893  \n",
       "1961-12-17  15.112857  6.531043   6.50  21.12  14.644286  5.665006  \n",
       "1961-12-24   9.958571  5.065308   2.62  16.62   8.164286  5.048035  \n",
       "1961-12-31   9.697143  3.262217   6.63  15.21  12.840000  3.012729  \n",
       "\n",
       "[52 rows x 48 columns]"
      ]
     },
     "execution_count": 45,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting records for each week\n",
    "q415 = data.resample('W').agg(['min','max','mean','std'])\n",
    "\n",
    "\n",
    "q415.loc[q415.index[1:53], \"RPT\":\"MAL\"] "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "68b8a6c7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "986ebb8d",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "572982d1",
   "metadata": {},
   "source": [
    "# Question 5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 46,
   "id": "e188db30",
   "metadata": {},
   "outputs": [],
   "source": [
    "# reading the dataset from address\n",
    "chipo = pd.read_csv('https://raw.githubusercontent.com/justmarkham/DAT8/master/data/chipotle.tsv', sep= '\\t')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "8f5a12b4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>quantity</th>\n",
       "      <th>item_name</th>\n",
       "      <th>choice_description</th>\n",
       "      <th>item_price</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Chips and Fresh Tomato Salsa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>$2.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Izze</td>\n",
       "      <td>[Clementine]</td>\n",
       "      <td>$3.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Nantucket Nectar</td>\n",
       "      <td>[Apple]</td>\n",
       "      <td>$3.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>Chips and Tomatillo-Green Chili Salsa</td>\n",
       "      <td>NaN</td>\n",
       "      <td>$2.39</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>Chicken Bowl</td>\n",
       "      <td>[Tomatillo-Red Chili Salsa (Hot), [Black Beans...</td>\n",
       "      <td>$16.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Chicken Bowl</td>\n",
       "      <td>[Fresh Tomato Salsa (Mild), [Rice, Cheese, Sou...</td>\n",
       "      <td>$10.98</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>Side of Chips</td>\n",
       "      <td>NaN</td>\n",
       "      <td>$1.69</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Steak Burrito</td>\n",
       "      <td>[Tomatillo Red Chili Salsa, [Fajita Vegetables...</td>\n",
       "      <td>$11.75</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>Steak Soft Tacos</td>\n",
       "      <td>[Tomatillo Green Chili Salsa, [Pinto Beans, Ch...</td>\n",
       "      <td>$9.25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>5</td>\n",
       "      <td>1</td>\n",
       "      <td>Steak Burrito</td>\n",
       "      <td>[Fresh Tomato Salsa, [Rice, Black Beans, Pinto...</td>\n",
       "      <td>$9.25</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   order_id  quantity                              item_name  \\\n",
       "0         1         1           Chips and Fresh Tomato Salsa   \n",
       "1         1         1                                   Izze   \n",
       "2         1         1                       Nantucket Nectar   \n",
       "3         1         1  Chips and Tomatillo-Green Chili Salsa   \n",
       "4         2         2                           Chicken Bowl   \n",
       "5         3         1                           Chicken Bowl   \n",
       "6         3         1                          Side of Chips   \n",
       "7         4         1                          Steak Burrito   \n",
       "8         4         1                       Steak Soft Tacos   \n",
       "9         5         1                          Steak Burrito   \n",
       "\n",
       "                                  choice_description item_price  \n",
       "0                                                NaN     $2.39   \n",
       "1                                       [Clementine]     $3.39   \n",
       "2                                            [Apple]     $3.39   \n",
       "3                                                NaN     $2.39   \n",
       "4  [Tomatillo-Red Chili Salsa (Hot), [Black Beans...    $16.98   \n",
       "5  [Fresh Tomato Salsa (Mild), [Rice, Cheese, Sou...    $10.98   \n",
       "6                                                NaN     $1.69   \n",
       "7  [Tomatillo Red Chili Salsa, [Fajita Vegetables...    $11.75   \n",
       "8  [Tomatillo Green Chili Salsa, [Pinto Beans, Ch...     $9.25   \n",
       "9  [Fresh Tomato Salsa, [Rice, Black Beans, Pinto...     $9.25   "
      ]
     },
     "execution_count": 47,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# reading first ten entries\n",
    "chipo.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "0955a915",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "<class 'pandas.core.frame.DataFrame'>\n",
      "RangeIndex: 4622 entries, 0 to 4621\n",
      "Data columns (total 5 columns):\n",
      " #   Column              Non-Null Count  Dtype \n",
      "---  ------              --------------  ----- \n",
      " 0   order_id            4622 non-null   int64 \n",
      " 1   quantity            4622 non-null   int64 \n",
      " 2   item_name           4622 non-null   object\n",
      " 3   choice_description  3376 non-null   object\n",
      " 4   item_price          4622 non-null   object\n",
      "dtypes: int64(2), object(3)\n",
      "memory usage: 180.7+ KB\n"
     ]
    }
   ],
   "source": [
    "# getting no of observations in dataset, it is 4622\n",
    "chipo.info()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "30a8af6a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(4622, 5)"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the no of columns, it is 5\n",
    "chipo.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "7869362f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "['order_id', 'quantity', 'item_name', 'choice_description', 'item_price']"
      ]
     },
     "execution_count": 50,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# printing name of all columns\n",
    "q47 = list(chipo)\n",
    "q47"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "95a21f10",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "RangeIndex(start=0, stop=4622, step=1)"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the index\n",
    "chipo.index"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "601de2e6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>item_name</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Chicken Bowl</th>\n",
       "      <td>713926</td>\n",
       "      <td>761</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chicken Burrito</th>\n",
       "      <td>497303</td>\n",
       "      <td>591</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Guacamole</th>\n",
       "      <td>449959</td>\n",
       "      <td>506</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Steak Burrito</th>\n",
       "      <td>328437</td>\n",
       "      <td>386</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Canned Soft Drink</th>\n",
       "      <td>304753</td>\n",
       "      <td>351</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips</th>\n",
       "      <td>208004</td>\n",
       "      <td>230</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Steak Bowl</th>\n",
       "      <td>193752</td>\n",
       "      <td>221</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bottled Water</th>\n",
       "      <td>175944</td>\n",
       "      <td>211</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Fresh Tomato Salsa</th>\n",
       "      <td>100419</td>\n",
       "      <td>130</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Canned Soda</th>\n",
       "      <td>76396</td>\n",
       "      <td>126</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chicken Salad Bowl</th>\n",
       "      <td>117104</td>\n",
       "      <td>123</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chicken Soft Tacos</th>\n",
       "      <td>98395</td>\n",
       "      <td>120</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Side of Chips</th>\n",
       "      <td>84769</td>\n",
       "      <td>110</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veggie Burrito</th>\n",
       "      <td>80962</td>\n",
       "      <td>97</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbacoa Burrito</th>\n",
       "      <td>74718</td>\n",
       "      <td>91</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veggie Bowl</th>\n",
       "      <td>72270</td>\n",
       "      <td>87</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carnitas Bowl</th>\n",
       "      <td>62742</td>\n",
       "      <td>71</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbacoa Bowl</th>\n",
       "      <td>53972</td>\n",
       "      <td>66</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carnitas Burrito</th>\n",
       "      <td>51652</td>\n",
       "      <td>60</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Steak Soft Tacos</th>\n",
       "      <td>50177</td>\n",
       "      <td>56</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6 Pack Soft Drink</th>\n",
       "      <td>52322</td>\n",
       "      <td>55</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Tomatillo Red Chili Salsa</th>\n",
       "      <td>45556</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chicken Crispy Tacos</th>\n",
       "      <td>47382</td>\n",
       "      <td>50</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Tomatillo Green Chili Salsa</th>\n",
       "      <td>41170</td>\n",
       "      <td>45</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carnitas Soft Tacos</th>\n",
       "      <td>37673</td>\n",
       "      <td>40</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Steak Crispy Tacos</th>\n",
       "      <td>35818</td>\n",
       "      <td>36</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Tomatillo-Green Chili Salsa</th>\n",
       "      <td>21826</td>\n",
       "      <td>33</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Steak Salad Bowl</th>\n",
       "      <td>29590</td>\n",
       "      <td>31</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Nantucket Nectar</th>\n",
       "      <td>21814</td>\n",
       "      <td>29</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Tomatillo-Red Chili Salsa</th>\n",
       "      <td>18344</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbacoa Soft Tacos</th>\n",
       "      <td>18725</td>\n",
       "      <td>25</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Roasted Chili Corn Salsa</th>\n",
       "      <td>14999</td>\n",
       "      <td>23</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Izze</th>\n",
       "      <td>10587</td>\n",
       "      <td>20</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veggie Salad Bowl</th>\n",
       "      <td>17303</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Roasted Chili-Corn Salsa</th>\n",
       "      <td>17462</td>\n",
       "      <td>18</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbacoa Crispy Tacos</th>\n",
       "      <td>5613</td>\n",
       "      <td>12</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Barbacoa Salad Bowl</th>\n",
       "      <td>9708</td>\n",
       "      <td>10</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chicken Salad</th>\n",
       "      <td>10465</td>\n",
       "      <td>9</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carnitas Crispy Tacos</th>\n",
       "      <td>5868</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veggie Soft Tacos</th>\n",
       "      <td>5520</td>\n",
       "      <td>8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Burrito</th>\n",
       "      <td>1550</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veggie Salad</th>\n",
       "      <td>7265</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carnitas Salad Bowl</th>\n",
       "      <td>6693</td>\n",
       "      <td>6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Bowl</th>\n",
       "      <td>472</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Steak Salad</th>\n",
       "      <td>2362</td>\n",
       "      <td>4</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Salad</th>\n",
       "      <td>1150</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Crispy Tacos</th>\n",
       "      <td>434</td>\n",
       "      <td>2</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Chips and Mild Fresh Tomato Salsa</th>\n",
       "      <td>279</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Carnitas Salad</th>\n",
       "      <td>1500</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Veggie Crispy Tacos</th>\n",
       "      <td>668</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                                       order_id  quantity\n",
       "item_name                                                \n",
       "Chicken Bowl                             713926       761\n",
       "Chicken Burrito                          497303       591\n",
       "Chips and Guacamole                      449959       506\n",
       "Steak Burrito                            328437       386\n",
       "Canned Soft Drink                        304753       351\n",
       "Chips                                    208004       230\n",
       "Steak Bowl                               193752       221\n",
       "Bottled Water                            175944       211\n",
       "Chips and Fresh Tomato Salsa             100419       130\n",
       "Canned Soda                               76396       126\n",
       "Chicken Salad Bowl                       117104       123\n",
       "Chicken Soft Tacos                        98395       120\n",
       "Side of Chips                             84769       110\n",
       "Veggie Burrito                            80962        97\n",
       "Barbacoa Burrito                          74718        91\n",
       "Veggie Bowl                               72270        87\n",
       "Carnitas Bowl                             62742        71\n",
       "Barbacoa Bowl                             53972        66\n",
       "Carnitas Burrito                          51652        60\n",
       "Steak Soft Tacos                          50177        56\n",
       "6 Pack Soft Drink                         52322        55\n",
       "Chips and Tomatillo Red Chili Salsa       45556        50\n",
       "Chicken Crispy Tacos                      47382        50\n",
       "Chips and Tomatillo Green Chili Salsa     41170        45\n",
       "Carnitas Soft Tacos                       37673        40\n",
       "Steak Crispy Tacos                        35818        36\n",
       "Chips and Tomatillo-Green Chili Salsa     21826        33\n",
       "Steak Salad Bowl                          29590        31\n",
       "Nantucket Nectar                          21814        29\n",
       "Chips and Tomatillo-Red Chili Salsa       18344        25\n",
       "Barbacoa Soft Tacos                       18725        25\n",
       "Chips and Roasted Chili Corn Salsa        14999        23\n",
       "Izze                                      10587        20\n",
       "Veggie Salad Bowl                         17303        18\n",
       "Chips and Roasted Chili-Corn Salsa        17462        18\n",
       "Barbacoa Crispy Tacos                      5613        12\n",
       "Barbacoa Salad Bowl                        9708        10\n",
       "Chicken Salad                             10465         9\n",
       "Carnitas Crispy Tacos                      5868         8\n",
       "Veggie Soft Tacos                          5520         8\n",
       "Burrito                                    1550         6\n",
       "Veggie Salad                               7265         6\n",
       "Carnitas Salad Bowl                        6693         6\n",
       "Bowl                                        472         4\n",
       "Steak Salad                                2362         4\n",
       "Salad                                      1150         2\n",
       "Crispy Tacos                                434         2\n",
       "Chips and Mild Fresh Tomato Salsa           279         1\n",
       "Carnitas Salad                             1500         1\n",
       "Veggie Crispy Tacos                         668         1"
      ]
     },
     "execution_count": 52,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the most ordered item\n",
    "chipo.groupby(by=\"item_name\").sum().sort_values('quantity',ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d2dcf43e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>order_id</th>\n",
       "      <th>quantity</th>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>choice_description</th>\n",
       "      <th></th>\n",
       "      <th></th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>[Diet Coke]</th>\n",
       "      <td>123455</td>\n",
       "      <td>159</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Coke]</th>\n",
       "      <td>122752</td>\n",
       "      <td>143</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Sprite]</th>\n",
       "      <td>80426</td>\n",
       "      <td>89</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Fresh Tomato Salsa, [Rice, Black Beans, Cheese, Sour Cream, Lettuce]]</th>\n",
       "      <td>43088</td>\n",
       "      <td>49</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Fresh Tomato Salsa, [Rice, Black Beans, Cheese, Sour Cream]]</th>\n",
       "      <td>36041</td>\n",
       "      <td>42</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Roasted Chili Corn Salsa, [Fajita Vegetables, Rice, Pinto Beans, Guacamole, Lettuce]]</th>\n",
       "      <td>577</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Roasted Chili Corn Salsa, [Fajita Vegetables, Rice, Sour Cream, Lettuce]]</th>\n",
       "      <td>585</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Roasted Chili Corn Salsa, [Fajita Vegetables, Sour Cream, Lettuce, Guacamole]]</th>\n",
       "      <td>235</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[Roasted Chili Corn Salsa, [Guacamole, Sour Cream, Rice, Fajita Vegetables, Lettuce]]</th>\n",
       "      <td>987</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>[[Tomatillo-Red Chili Salsa (Hot), Tomatillo-Green Chili Salsa (Medium)], [Rice, Pinto Beans, Fajita Veggies, Lettuce]]</th>\n",
       "      <td>1299</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>1043 rows Ã— 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                                                    order_id  quantity\n",
       "choice_description                                                    \n",
       "[Diet Coke]                                           123455       159\n",
       "[Coke]                                                122752       143\n",
       "[Sprite]                                               80426        89\n",
       "[Fresh Tomato Salsa, [Rice, Black Beans, Cheese...     43088        49\n",
       "[Fresh Tomato Salsa, [Rice, Black Beans, Cheese...     36041        42\n",
       "...                                                      ...       ...\n",
       "[Roasted Chili Corn Salsa, [Fajita Vegetables, ...       577         1\n",
       "[Roasted Chili Corn Salsa, [Fajita Vegetables, ...       585         1\n",
       "[Roasted Chili Corn Salsa, [Fajita Vegetables, ...       235         1\n",
       "[Roasted Chili Corn Salsa, [Guacamole, Sour Cre...       987         1\n",
       "[[Tomatillo-Red Chili Salsa (Hot), Tomatillo-Gr...      1299         1\n",
       "\n",
       "[1043 rows x 2 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting quantity for mostordered item\n",
    "chipo.groupby(by=\"choice_description\").sum().sort_values('quantity',ascending=False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 54,
   "id": "994e42ca",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "4622"
      ]
     },
     "execution_count": 54,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the no of items ordered\n",
    "chipo.item_name.count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "d76e20a6",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('O')"
      ]
     },
     "execution_count": 55,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking the datatype\n",
    "chipo.item_price.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "d3c7a1a2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# creating a lamda fn to change datatype\n",
    "q4fn = lambda x: float(x[1:-1])\n",
    "chipo.item_price = chipo.item_price.apply(q4fn)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 57,
   "id": "3eb5319c",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "dtype('float64')"
      ]
     },
     "execution_count": 57,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# checking the datatype\n",
    "chipo.item_price.dtype"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 58,
   "id": "7d289ba9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "39237.02"
      ]
     },
     "execution_count": 58,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting the revenue\n",
    "q414 =  (chipo.item_price * chipo.quantity).sum()\n",
    "q414"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "9e3b2879",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "4e93a074",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1834"
      ]
     },
     "execution_count": 59,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# how many orders where placed\n",
    "chipo.order_id.value_counts().count()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "7c65e201",
   "metadata": {},
   "outputs": [],
   "source": [
    "# getting the average revenue per order\n",
    "q416=chipo.groupby(by=['order_id']).sum().mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 61,
   "id": "4a73315a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "quantity       2.711014\n",
       "item_price    18.811429\n",
       "dtype: float64"
      ]
     },
     "execution_count": 61,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q416"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "id": "89e65b03",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "50"
      ]
     },
     "execution_count": 62,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# getting diffrent items sold\n",
    "q417=chipo.item_name.value_counts().count()\n",
    "q417"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1818f2ea",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8d6408a8",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "7b0c375e",
   "metadata": {},
   "source": [
    "# Question 6"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 63,
   "id": "2731c868",
   "metadata": {},
   "outputs": [],
   "source": [
    "# improting libraries\n",
    "\n",
    "import matplotlib.pyplot as plt\n",
    "\n",
    "#reading data set\n",
    "q6df = pd.read_csv('us-marriages-divorces-1867-2014.csv')\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 64,
   "id": "60b18608",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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oosoLi6mtraWH/zgB91KwLoiaEmYtfYQcKjh+zJjzDZgOHB8EiYiIiLS6xrrwNzSKzVhxphMYDawspWHFxljNhhjXjXGtLo8wxhzuzFmjTFmTV5eXjBDFREREekVQU/CjDExwDPAl621x3eCWweMstbOBP4IPN/aNay1D1hr51lr56WmpgY1XhEREZHeENQkzBgTipOAPWatffb4x621pdba8obvXwFCjTEpwYxJREREpC8IWhJmjDHAP4Ft1tp72zgnveE8jDHzG+IpaO1cERGRgaSoopbz/7CMJ1fvdzsUcUkwR8JOBm4EPmGMWd9wu8AY8zljzOcazrkC2GyM2QDcB1xjg9UzQ0REpA9JiAolr6yaj/YWuh2Ka7xeL7NmzWLq1KnMnDmTe++9F7/fD8CaNWu46667XI4wuIK5OvIDwHRwzv3A/cGKQUREpK8yxnBSZhKr9g3eJCwyMpL169cDcPToUa677jpKSkr48Y9/zLx585g3r9X2Wp1SX1/fra2Fgkkd80VERFwyf3QSucVV5BRVuh2K69LS0njggQe4//77sdby3nvvcdFFF+H3+8nMzKS4uLjp3HHjxnHkyBGys7M588wzmTFjBmeeeSb79ztTu5/+9Kf56le/yhlnnMG3vvUtdu/ezVlnncXMmTOZM2cOe/bsAeDXv/41J510EjNmzOCHP/whABUVFVx44YXMnDmTadOm8eSTTwbtPffN1FBERGQQmD86CYDVWYVkJEa5F8ir34bDm3r2munT4fxfdOopY8aMwe/3c/To0aZjHo+HSy+9lOeee45bbrmFlStXkpmZyZAhQ7j44ou56aabuPnmm3nwwQe56667eP755wHYuXMnb731Fl6vlwULFvDtb3+byy67jOrqavx+P2+88Qa7du1i1apVWGu55JJLWLp0KXl5eQwbNoyXX34ZcPaeDBaNhImIiLhkUnocseEhrNpX5HYofUZrpeFXX31104jUE088wdVXXw3AihUruO666wC48cYb+eCDD5qec+WVV+L1eikrKyM3N5fLLrsMgIiICKKionjjjTd44403mD17NnPmzGH79u3s2rWL6dOn89Zbb/Gtb32LZcuWER8fH7T3qpEwERERl3g9hnmZiaza13ONAX712nZmZMRz3rShgT+pkyNWwbJ37168Xi9paWls27at6fiiRYvYvXs3eXl5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\n",
      "text/plain": [
       "<Figure size 720x720 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# plotting the graph\n",
    "\n",
    "q6df.plot('Year',y=['Marriages','Divorces'] ,figsize=(10,10))\n",
    "plt.title(\"Question 6\")\n",
    "plt.xlabel('year')\n",
    "plt.ylabel('number of marriages and divorces per capita')\n",
    "plt.show( )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "id": "aae2ca59",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Marriages</th>\n",
       "      <th>Divorces</th>\n",
       "      <th>Population</th>\n",
       "      <th>Marriages_per_1000</th>\n",
       "      <th>Divorces_per_1000</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1867</td>\n",
       "      <td>357000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>36970000</td>\n",
       "      <td>9.7</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>1868</td>\n",
       "      <td>345000.0</td>\n",
       "      <td>10000.0</td>\n",
       "      <td>37885000</td>\n",
       "      <td>9.1</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1869</td>\n",
       "      <td>348000.0</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>38870000</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>1870</td>\n",
       "      <td>352000.0</td>\n",
       "      <td>11000.0</td>\n",
       "      <td>39905000</td>\n",
       "      <td>8.8</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>1871</td>\n",
       "      <td>359000.0</td>\n",
       "      <td>12000.0</td>\n",
       "      <td>41010000</td>\n",
       "      <td>8.8</td>\n",
       "      <td>0.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>106</th>\n",
       "      <td>1973</td>\n",
       "      <td>2284108.0</td>\n",
       "      <td>915000.0</td>\n",
       "      <td>211939000</td>\n",
       "      <td>10.8</td>\n",
       "      <td>4.3</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>107</th>\n",
       "      <td>1974</td>\n",
       "      <td>2245929.0</td>\n",
       "      <td>983931.0</td>\n",
       "      <td>213898000</td>\n",
       "      <td>10.5</td>\n",
       "      <td>4.6</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>108</th>\n",
       "      <td>1975</td>\n",
       "      <td>2159810.0</td>\n",
       "      <td>1036709.0</td>\n",
       "      <td>215981000</td>\n",
       "      <td>10.0</td>\n",
       "      <td>4.8</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>109</th>\n",
       "      <td>1976</td>\n",
       "      <td>2159051.0</td>\n",
       "      <td>1090430.0</td>\n",
       "      <td>218086000</td>\n",
       "      <td>9.9</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>110</th>\n",
       "      <td>1977</td>\n",
       "      <td>2180861.0</td>\n",
       "      <td>1101445.0</td>\n",
       "      <td>220289000</td>\n",
       "      <td>9.9</td>\n",
       "      <td>5.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>111 rows Ã— 6 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year  Marriages   Divorces  Population  Marriages_per_1000  \\\n",
       "0    1867   357000.0    10000.0    36970000                 9.7   \n",
       "1    1868   345000.0    10000.0    37885000                 9.1   \n",
       "2    1869   348000.0    11000.0    38870000                 9.0   \n",
       "3    1870   352000.0    11000.0    39905000                 8.8   \n",
       "4    1871   359000.0    12000.0    41010000                 8.8   \n",
       "..    ...        ...        ...         ...                 ...   \n",
       "106  1973  2284108.0   915000.0   211939000                10.8   \n",
       "107  1974  2245929.0   983931.0   213898000                10.5   \n",
       "108  1975  2159810.0  1036709.0   215981000                10.0   \n",
       "109  1976  2159051.0  1090430.0   218086000                 9.9   \n",
       "110  1977  2180861.0  1101445.0   220289000                 9.9   \n",
       "\n",
       "     Divorces_per_1000  \n",
       "0                  0.3  \n",
       "1                  0.3  \n",
       "2                  0.3  \n",
       "3                  0.3  \n",
       "4                  0.3  \n",
       "..                 ...  \n",
       "106                4.3  \n",
       "107                4.6  \n",
       "108                4.8  \n",
       "109                5.0  \n",
       "110                5.0  \n",
       "\n",
       "[111 rows x 6 columns]"
      ]
     },
     "execution_count": 65,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q6df.head(111)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "8b5afe8f",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "0b19b8a0",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "a0bd4cd5",
   "metadata": {},
   "source": [
    "# Question 7"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "7a6cac36",
   "metadata": {},
   "outputs": [],
   "source": [
    "# getting the values for 1950,1900,2000 for plotting\n",
    "q7df = q6df[(q6df['Year'] == 1900) |\n",
    "          (q6df['Year'] == 1950)  | (q6df['Year'] == 2000)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "f759a1e8",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Year</th>\n",
       "      <th>Marriages</th>\n",
       "      <th>Divorces</th>\n",
       "      <th>Population</th>\n",
       "      <th>Marriages_per_1000</th>\n",
       "      <th>Divorces_per_1000</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>1900</td>\n",
       "      <td>709000.0</td>\n",
       "      <td>56000.0</td>\n",
       "      <td>76094000</td>\n",
       "      <td>9.3</td>\n",
       "      <td>0.7</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>83</th>\n",
       "      <td>1950</td>\n",
       "      <td>1667000.0</td>\n",
       "      <td>385000.0</td>\n",
       "      <td>151684000</td>\n",
       "      <td>11.0</td>\n",
       "      <td>2.5</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>133</th>\n",
       "      <td>2000</td>\n",
       "      <td>2315000.0</td>\n",
       "      <td>944000.0</td>\n",
       "      <td>282398000</td>\n",
       "      <td>8.2</td>\n",
       "      <td>3.3</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "     Year  Marriages  Divorces  Population  Marriages_per_1000  \\\n",
       "33   1900   709000.0   56000.0    76094000                 9.3   \n",
       "83   1950  1667000.0  385000.0   151684000                11.0   \n",
       "133  2000  2315000.0  944000.0   282398000                 8.2   \n",
       "\n",
       "     Divorces_per_1000  \n",
       "33                 0.7  \n",
       "83                 2.5  \n",
       "133                3.3  "
      ]
     },
     "execution_count": 67,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "q7df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "3d5d42f0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "#getting the data\n",
    "q7mc = [709000, 1667000, 2315000]\n",
    "q7dc = [56000, 385000, 944000]\n",
    "q7y = ['1900', '1950', '2000']\n",
    "\n",
    "q7x = np.arange(len(q7mc))\n",
    "plt.bar(q7x, q7mc,width = 0.30)\n",
    "plt.bar(q7x + .30 , q7dc,width = 0.30)\n",
    "plt.legend(['marriage', 'divorce'])\n",
    "plt.xticks([i for i in range(3)], q7y  )\n",
    "plt.title(\"Question 7\")\n",
    "plt.xlabel('marriage and divorce rate')\n",
    "plt.ylabel('count')\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "ebb26598",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "33d3db47",
   "metadata": {},
   "source": [
    "# Question 8"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "34f614fb",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "id": "63c278f2",
   "metadata": {},
   "outputs": [],
   "source": [
    "# reading the data\n",
    "q8hk = pd.read_csv('actor_kill_counts.csv')\n",
    "q8hk.sort_values(by=['Count'], inplace=True)\n",
    "q8ak = q8hk['Actor'].values\n",
    "q8kc = q8hk['Count'].values"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "d15c552f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "#plotting the graph\n",
    "\n",
    "fig, ax = plt.subplots()\n",
    "\n",
    "q8y= np.arange(len(q8ak))\n",
    "ax.barh(q8y, q8kc, align='center')\n",
    "ax.set_yticks(q8y, labels=q8ak)\n",
    "ax.invert_yaxis()  \n",
    "ax.set_xlabel('Kills')\n",
    "ax.set_title('Question 8')\n",
    "plt.rcdefaults()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "42402323",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "id": "a0c5dbb6",
   "metadata": {},
   "source": [
    "# Question 9"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "id": "ba098f48",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "#reading the data and plotting\n",
    "q9df = pd.read_csv('roman-emperor-reigns.csv')\n",
    "q91 = q9df.groupby(['Cause_of_Death'])['Cause_of_Death'].count()\n",
    "plt.pie(q91, labels = q91.index,autopct= lambda p:'{:.0f}%'.format(round(p)))\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "33fc48c9",
   "metadata": {},
   "source": [
    "# Question 10"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "24e1e43f",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 640x480 with 2 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "# reading and plotting\n",
    "q10df = pd.read_csv('arcade-revenue-vs-cs-doctorates.csv')\n",
    "q10df.plot.scatter(x='Total Arcade Revenue (billions)', y='Computer Science Doctorates Awarded (US)', c='Year',colormap='inferno');\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b27b5609",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
